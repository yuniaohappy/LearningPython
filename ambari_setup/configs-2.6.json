{
    "accumulo-env": {
        "accumulo_gc_heapsize": "256",
        "accumulo_instance_name": "hdp-accumulo-instance",
        "accumulo_log_dir": "/var/log/accumulo",
        "accumulo_master_heapsize": "1024",
        "accumulo_monitor_bind_all": "false",
        "accumulo_monitor_heapsize": "1024",
        "accumulo_other_heapsize": "1024",
        "accumulo_pid_dir": "/var/run/accumulo",
        "accumulo_tserver_heapsize": "1536",
        "accumulo_user": "accumulo",
        "server_content": "#! /usr/bin/env bash export HADOOP_PREFIX={{hadoop_prefix}} export HADOOP_CONF_DIR={{hadoop_conf_dir}} export JAVA_HOME={{java64_home}} export ZOOKEEPER_HOME={{zookeeper_home}} export ACCUMULO_PID_DIR={{pid_dir}} export ACCUMULO_LOG_DIR={{log_dir}} export ACCUMULO_CONF_DIR={{server_conf_dir}} export ACCUMULO_TSERVER_OPTS=\"-Xmx{{accumulo_tserver_heapsize}}m -Xms{{accumulo_tserver_heapsize}}m\" export ACCUMULO_MASTER_OPTS=\"-Xmx{{accumulo_master_heapsize}}m -Xms{{accumulo_master_heapsize}}m\" export ACCUMULO_MONITOR_OPTS=\"-Xmx{{accumulo_monitor_heapsize}}m -Xms{{accumulo_monitor_heapsize}}m\" export ACCUMULO_GC_OPTS=\"-Xmx{{accumulo_gc_heapsize}}m -Xms{{accumulo_gc_heapsize}}m\" export ACCUMULO_GENERAL_OPTS=\"-XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -Djava.net.preferIPv4Stack=true ${ACCUMULO_GENERAL_OPTS}\" export ACCUMULO_OTHER_OPTS=\"-Xmx{{accumulo_other_heapsize}}m -Xms{{accumulo_other_heapsize}}m ${ACCUMULO_OTHER_OPTS}\" export ACCUMULO_MONITOR_BIND_ALL={{monitor_bind_str}} # what do when the JVM runs out of heap memory export ACCUMULO_KILL_CMD='kill -9 %p'"
    },
    "accumulo-log4j": {
        "audit_log_level": "OFF",
        "debug_log_size": "512M",
        "debug_num_logs": "10",
        "info_log_size": "512M",
        "info_num_logs": "10",
        "monitor_forwarding_log_level": "WARN"
    },
    "accumulo-site": {
        "gc.port.client": "50092",
        "general.classpaths": "$ACCUMULO_HOME/lib/accumulo-server.jar, $ACCUMULO_HOME/lib/accumulo-core.jar, $ACCUMULO_HOME/lib/accumulo-start.jar, $ACCUMULO_HOME/lib/accumulo-fate.jar, $ACCUMULO_HOME/lib/accumulo-proxy.jar, $ACCUMULO_HOME/lib/[^.].*.jar, $ZOOKEEPER_HOME/zookeeper[^.].*.jar, $HADOOP_CONF_DIR, /usr/hdp/current/hadoop-client/[^.].*.jar, /usr/hdp/current/hadoop-client/lib/(?!slf4j)[^.].*.jar, /usr/hdp/current/hadoop-hdfs-client/[^.].*.jar, /usr/hdp/current/hadoop-mapreduce-client/[^.].*.jar, /usr/hdp/current/hadoop-yarn-client/[^.].*.jar, /usr/hdp/current/hadoop-yarn-client/lib/jersey.*.jar, /usr/hdp/current/hive-client/lib/hive-accumulo-handler.jar",
        "instance.volumes": "hdfs://%HOSTGROUP::host_group_1%:8020/apps/accumulo/data",
        "instance.zookeeper.host": "%HOSTGROUP::host_group_1%:2181",
        "instance.zookeeper.timeout": "30s",
        "master.port.client": "9999",
        "monitor.port.client": "50095",
        "monitor.port.log4j": "4560",
        "trace.port.client": "12234",
        "trace.user": "trace",
        "tserver.cache.data.size": "128M",
        "tserver.cache.index.size": "256M",
        "tserver.memory.maps.max": "1G",
        "tserver.memory.maps.native.enabled": "true",
        "tserver.port.client": "9997",
        "tserver.sort.buffer.size": "200M",
        "tserver.walog.max.size": "1G"
    },
    "activity-conf": {
        "activity.explorer.user": "activity_explorer",
        "global.activity.analyzer.user": "activity_analyzer",
        "global.activity.processing.parallelism": "8",
        "global.activity.processor.pool.max.wait.seconds": "60",
        "hdfs.activity.watcher.enabled": "true",
        "mr_job.activity.watcher.enabled": "true",
        "mr_job.max.job.size.mb.for.parallel.execution": "500",
        "phoenix.sink.batch.size": "100",
        "phoenix.sink.flush.interval.seconds": "30",
        "tez_job.activity.watcher.enabled": "true",
        "tez_job.tmp.dir": "/var/lib/smartsense/activity-analyzer/tez/tmp/",
        "yarn_app.activity.watcher.enabled": "true"
    },
    "activity-env": {
        "activity-env-content": "#!/bin/bash # Copyright 2014 The Apache Software Foundation # # Licensed to the Apache Software Foundation (ASF) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. The ASF licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # Enable verbose shell execution #set -xv ## Set HOME for various components export HADOOP_HOME=/usr/hdp/current/hadoop-client export HDFS_HOME=/usr/hdp/current/hadoop-hdfs-client export MAPREDUCE_HOME=/usr/hdp/current/hadoop-mapreduce-client export YARN_HOME=/usr/hdp/current/hadoop-yarn-client export HIVE_HOME=/usr/hdp/current/hive-client export HCAT_HOME=/usr/hdp/current/hive-webhcat export TEZ_HOME=/usr/hdp/current/tez-client export HBASE_HOME=/usr/hdp/current/hbase-client export PHOENIX_HOME=/usr/hdp/current/phoenix-client export ACTIVITY_ANALYZER_HOME=/usr/hdp/share/hst/activity-analyzer export AMS_COLLECTOR_HOME=/usr/lib/ambari-metrics-collector ## Set conf dir for various components export HADOOP_CONF_DIR=/etc/hadoop/conf/ export HIVE_CONF_DIR=/etc/hive/conf/ export HBASE_CONF_DIR=/etc/hbase/conf/ export TEZ_CONF_DIR=/etc/tez/conf/ export ACTIVITY_ANALYZER_CONF_DIR=/etc/smartsense-activity/conf/ export AMS_HBASE_CONF=/etc/ams-hbase/conf export DEBUG_ENABLED=false"
    },
    "activity-log4j": {
        "activity-log4j-content": "# Copyright 2014 The Apache Software Foundation # # Licensed to the Apache Software Foundation (ASF) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. The ASF licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # Define some default values that can be overridden by system properties # Root logger option log4j.rootLogger=INFO,file log4j.appender.file=org.apache.log4j.RollingFileAppender log4j.appender.file.File={{activity_log_dir}}/${log.file.name} log4j.appender.file.MaxFileSize=30MB log4j.appender.file.MaxBackupIndex=10 log4j.appender.file.layout=org.apache.log4j.PatternLayout log4j.appender.file.layout.ConversionPattern=%d{DATE} %5p [%t] %c{1}:%L - %m%n",
        "activity_log_dir": "/var/log/smartsense-activity"
    },
    "activity-zeppelin-env": {
        "activity-zeppelin-env-content": "#!/bin/bash # # Licensed to the Apache Software Foundation (ASF) under one or more # contributor license agreements. See the NOTICE file distributed with # this work for additional information regarding copyright ownership. # The ASF licenses this file to You under the Apache License, Version 2.0 # (the \"License\"); you may not use this file except in compliance with # the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # export JAVA_HOME={{java_home}} # Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\" export ZEPPELIN_JAVA_OPTS=\"-Dhdp.version={{hdp_version}} -Dlog.file.name=activity-explorer.log -DSmartSenseActivityExplorer\" # export ZEPPELIN_MEM # Zeppelin jvm mem options Default -Xmx1024m -XX:MaxPermSize=512m # export ZEPPELIN_INTP_MEM # zeppelin interpreter process jvm mem options. Default = ZEPPELIN_MEM # export ZEPPELIN_INTP_JAVA_OPTS # zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTS export ZEPPELIN_LOG_DIR={{activity_log_dir}} export ZEPPELIN_PID_DIR=/var/run/smartsense-activity-explorer export ZEPPELIN_WAR_TEMPDIR=/var/lib/smartsense/activity-explorer/webapp export ZEPPELIN_NOTEBOOK_DIR=/var/lib/smartsense/activity-explorer/notebook export ZEPPELIN_CLASSPATH=\"/etc/ams-hbase/conf:${ZEPPELIN_CLASSPATH}\" export CLASSPATH=${ZEPPELIN_CLASSPATH}"
    },
    "activity-zeppelin-interpreter": {
        "activity-zeppelin-interpreter-content": "{ \"interpreterSettings\": { \"2BJB693M8\": { \"id\": \"2BJB693M8\", \"name\": \"phoenix\", \"group\": \"phoenix\", \"properties\": { \"phoenix.jdbc.url\": \"{{activity_explorer_jdbc_url}}\", \"phoenix.user\": \"\", \"phoenix.password\": \"\", \"phoenix.max.result\": \"1000\", \"phoenix.driver.name\": \"org.apache.phoenix.jdbc.PhoenixDriver\" }, \"interpreterGroup\": [ { \"class\": \"org.apache.zeppelin.phoenix.PhoenixInterpreter\", \"name\": \"sql\" } ], \"dependencies\": [], \"option\": { \"remote\": true, \"perNoteSession\": false } } }, \"interpreterBindings\": { \"2BNVQJUBK\": [ \"2BJB693M8\" ], \"2BPD7951H\": [ \"2BJB693M8\" ], \"2BQH91X36\": [ \"2BJB693M8\" ], \"2BTCVPTMH\": [ \"2BJB693M8\" ] }, \"interpreterRepositories\": [ { \"id\": \"central\", \"type\": \"default\", \"url\": \"http://repo1.maven.org/maven2/\", \"releasePolicy\": { \"enabled\": true, \"updatePolicy\": \"daily\", \"checksumPolicy\": \"warn\" }, \"snapshotPolicy\": { \"enabled\": true, \"updatePolicy\": \"daily\", \"checksumPolicy\": \"warn\" }, \"mirroredRepositories\": [], \"repositoryManager\": false } ] }"
    },
    "activity-zeppelin-shiro": {
        "main.securityManager.sessionManager": "$sessionManager",
        "main.sessionManager": "org.apache.shiro.web.session.mgt.DefaultWebSessionManager",
        "securityManager.sessionManager.globalSessionTimeout": "86400000"
    },
    "activity-zeppelin-site": {
        "zeppelin.anonymous.allowed": "false",
        "zeppelin.interpreter.connect.timeout": "30000",
        "zeppelin.interpreter.dir": "/usr/hdp/share/hst/activity-explorer/interpreter",
        "zeppelin.interpreters": "org.apache.zeppelin.phoenix.PhoenixInterpreter",
        "zeppelin.notebook.dir": "/var/lib/smartsense/activity-explorer/notebook",
        "zeppelin.notebook.homescreen.hide": "false",
        "zeppelin.notebook.storage": "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
        "zeppelin.server.addr": "0.0.0.0",
        "zeppelin.server.allowed.origins": "*",
        "zeppelin.server.context.path": "/",
        "zeppelin.server.port": "9060",
        "zeppelin.ssl": "false",
        "zeppelin.ssl.client.auth": "false",
        "zeppelin.ssl.keystore.path": "/var/lib/smartsense/activity-explorer/keystore",
        "zeppelin.ssl.keystore.type": "JKS",
        "zeppelin.ssl.truststore.path": "/var/lib/smartsense/activity-explorer/truststore",
        "zeppelin.ssl.truststore.type": "JKS",
        "zeppelin.war.tempdir": "/var/lib/smartsense/activity-explorer/webapp",
        "zeppelin.websocket.max.text.message.size": "1024000"
    },
    "ams-env": {
        "ambari_metrics_user": "ams",
        "metrics_collector_heapsize": "512",
        "metrics_collector_log_dir": "/var/log/ambari-metrics-collector",
        "metrics_collector_pid_dir": "/var/run/ambari-metrics-collector",
        "metrics_monitor_log_dir": "/var/log/ambari-metrics-monitor",
        "metrics_monitor_pid_dir": "/var/run/ambari-metrics-monitor"
    },
    "ams-grafana-env": {
        "metrics_grafana_data_dir": "/var/lib/ambari-metrics-grafana",
        "metrics_grafana_log_dir": "/var/log/ambari-metrics-grafana",
        "metrics_grafana_pid_dir": "/var/run/ambari-metrics-grafana",
        "metrics_grafana_username": "admin"
    },
    "ams-grafana-ini": {
        "cert_file": "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
        "cert_key": "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
        "port": "3000",
        "protocol": "http"
    },
    "ams-hbase-env": {
        "hbase_classpath_additional": "",
        "hbase_log_dir": "/var/log/ambari-metrics-collector",
        "hbase_master_heapsize": "768",
        "hbase_master_maxperm_size": "128",
        "hbase_master_xmn_size": "256",
        "hbase_pid_dir": "/var/run/ambari-metrics-collector/",
        "hbase_regionserver_heapsize": "768",
        "hbase_regionserver_shutdown_timeout": "30",
        "hbase_regionserver_xmn_ratio": "0.2",
        "max_open_files_limit": "32768",
        "regionserver_xmn_size": "128"
    },
    "ams-hbase-policy": {
        "security.admin.protocol.acl": "*",
        "security.client.protocol.acl": "*",
        "security.masterregion.protocol.acl": "*"
    },
    "ams-hbase-security-site": {
        "ams.zookeeper.keytab": "",
        "ams.zookeeper.principal": "",
        "hadoop.security.authentication": "",
        "hbase.coprocessor.master.classes": "",
        "hbase.coprocessor.region.classes": "",
        "hbase.master.kerberos.principal": "",
        "hbase.master.keytab.file": "",
        "hbase.myclient.keytab": "",
        "hbase.myclient.principal": "",
        "hbase.regionserver.kerberos.principal": "",
        "hbase.regionserver.keytab.file": "",
        "hbase.security.authentication": "",
        "hbase.security.authorization": "",
        "hbase.zookeeper.property.authProvider.1": "",
        "hbase.zookeeper.property.jaasLoginRenew": "",
        "hbase.zookeeper.property.kerberos.removeHostFromPrincipal": "",
        "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal": ""
    },
    "ams-hbase-site": {
        "dfs.client.read.shortcircuit": "true",
        "hbase.client.scanner.caching": "10000",
        "hbase.client.scanner.timeout.period": "300000",
        "hbase.cluster.distributed": "false",
        "hbase.hregion.majorcompaction": "0",
        "hbase.hregion.max.filesize": "4294967296",
        "hbase.hregion.memstore.block.multiplier": "4",
        "hbase.hregion.memstore.flush.size": "134217728",
        "hbase.hstore.blockingStoreFiles": "200",
        "hbase.hstore.flusher.count": "2",
        "hbase.local.dir": "${hbase.tmp.dir}/local",
        "hbase.master.info.bindAddress": "0.0.0.0",
        "hbase.master.info.port": "61310",
        "hbase.master.normalizer.class": "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
        "hbase.master.port": "61300",
        "hbase.master.wait.on.regionservers.mintostart": "1",
        "hbase.normalizer.enabled": "false",
        "hbase.normalizer.period": "600000",
        "hbase.regionserver.global.memstore.lowerLimit": "0.3",
        "hbase.regionserver.global.memstore.upperLimit": "0.35",
        "hbase.regionserver.info.port": "61330",
        "hbase.regionserver.port": "61320",
        "hbase.regionserver.thread.compaction.large": "2",
        "hbase.regionserver.thread.compaction.small": "3",
        "hbase.replication": "false",
        "hbase.rootdir": "file:///var/lib/ambari-metrics-collector/hbase",
        "hbase.rpc.timeout": "300000",
        "hbase.snapshot.enabled": "false",
        "hbase.superuser": "activity_explorer,activity_analyzer",
        "hbase.tmp.dir": "/var/lib/ambari-metrics-collector/hbase-tmp",
        "hbase.zookeeper.leaderport": "61388",
        "hbase.zookeeper.peerport": "61288",
        "hbase.zookeeper.property.clientPort": "{{zookeeper_clientPort}}",
        "hbase.zookeeper.property.dataDir": "${hbase.tmp.dir}/zookeeper",
        "hbase.zookeeper.property.tickTime": "6000",
        "hbase.zookeeper.quorum": "{{zookeeper_quorum_hosts}}",
        "hfile.block.cache.size": "0.3",
        "phoenix.coprocessor.maxMetaDataCacheSize": "20480000",
        "phoenix.coprocessor.maxServerCacheTimeToLiveMs": "60000",
        "phoenix.groupby.maxCacheSize": "307200000",
        "phoenix.mutate.batchSize": "10000",
        "phoenix.query.keepAliveMs": "300000",
        "phoenix.query.maxGlobalMemoryPercentage": "15",
        "phoenix.query.rowKeyOrderSaltedTable": "true",
        "phoenix.query.spoolThresholdBytes": "20971520",
        "phoenix.query.timeoutMs": "300000",
        "phoenix.sequence.saltBuckets": "2",
        "phoenix.spool.directory": "${hbase.tmp.dir}/phoenix-spool",
        "zookeeper.session.timeout": "120000",
        "zookeeper.session.timeout.localHBaseCluster": "120000",
        "zookeeper.znode.parent": "/ams-hbase-unsecure"
    },
    "ams-site": {
        "phoenix.query.maxGlobalMemoryPercentage": "25",
        "phoenix.spool.directory": "/tmp",
        "timeline.metrics.aggregator.checkpoint.dir": "/var/lib/ambari-metrics-collector/checkpoint",
        "timeline.metrics.aggregators.skip.blockcache.enabled": "false",
        "timeline.metrics.cache.commit.interval": "3",
        "timeline.metrics.cache.enabled": "true",
        "timeline.metrics.cache.size": "150",
        "timeline.metrics.cluster.aggregate.splitpoints": "mapred.ShuffleMetrics.ShuffleOutputsFailed",
        "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier": "2",
        "timeline.metrics.cluster.aggregator.daily.disabled": "false",
        "timeline.metrics.cluster.aggregator.daily.interval": "86400",
        "timeline.metrics.cluster.aggregator.daily.ttl": "63072000",
        "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier": "2",
        "timeline.metrics.cluster.aggregator.hourly.disabled": "false",
        "timeline.metrics.cluster.aggregator.hourly.interval": "3600",
        "timeline.metrics.cluster.aggregator.hourly.ttl": "31536000",
        "timeline.metrics.cluster.aggregator.interpolation.enabled": "true",
        "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier": "2",
        "timeline.metrics.cluster.aggregator.minute.disabled": "false",
        "timeline.metrics.cluster.aggregator.minute.interval": "300",
        "timeline.metrics.cluster.aggregator.minute.ttl": "2592000",
        "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier": "2",
        "timeline.metrics.cluster.aggregator.second.disabled": "false",
        "timeline.metrics.cluster.aggregator.second.interval": "120",
        "timeline.metrics.cluster.aggregator.second.timeslice.interval": "30",
        "timeline.metrics.cluster.aggregator.second.ttl": "259200",
        "timeline.metrics.daily.aggregator.minute.interval": "86400",
        "timeline.metrics.hbase.compression.scheme": "SNAPPY",
        "timeline.metrics.hbase.data.block.encoding": "FAST_DIFF",
        "timeline.metrics.hbase.fifo.compaction.enabled": "true",
        "timeline.metrics.hbase.init.check.enabled": "true",
        "timeline.metrics.host.aggregate.splitpoints": "mapred.ShuffleMetrics.ShuffleOutputsFailed",
        "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier": "2",
        "timeline.metrics.host.aggregator.daily.disabled": "false",
        "timeline.metrics.host.aggregator.daily.ttl": "31536000",
        "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier": "2",
        "timeline.metrics.host.aggregator.hourly.disabled": "false",
        "timeline.metrics.host.aggregator.hourly.interval": "3600",
        "timeline.metrics.host.aggregator.hourly.ttl": "2592000",
        "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier": "2",
        "timeline.metrics.host.aggregator.minute.disabled": "false",
        "timeline.metrics.host.aggregator.minute.interval": "300",
        "timeline.metrics.host.aggregator.minute.ttl": "604800",
        "timeline.metrics.host.aggregator.ttl": "86400",
        "timeline.metrics.service.checkpointDelay": "60",
        "timeline.metrics.service.cluster.aggregator.appIds": "datanode,nodemanager,hbase",
        "timeline.metrics.service.default.result.limit": "15840",
        "timeline.metrics.service.handler.thread.count": "20",
        "timeline.metrics.service.http.policy": "HTTP_ONLY",
        "timeline.metrics.service.operation.mode": "embedded",
        "timeline.metrics.service.resultset.fetchSize": "2000",
        "timeline.metrics.service.rpc.address": "0.0.0.0:60200",
        "timeline.metrics.service.use.groupBy.aggregators": "true",
        "timeline.metrics.service.watcher.delay": "30",
        "timeline.metrics.service.watcher.disabled": "false",
        "timeline.metrics.service.watcher.initial.delay": "600",
        "timeline.metrics.service.watcher.timeout": "30",
        "timeline.metrics.service.webapp.address": "%HOSTGROUP::host_group_1%:6188",
        "timeline.metrics.sink.collection.period": "10",
        "timeline.metrics.sink.report.interval": "60"
    },
    "ams-ssl-client": {
        "ssl.client.truststore.location": "/etc/security/clientKeys/all.jks",
        "ssl.client.truststore.type": "jks"
    },
    "ams-ssl-server": {
        "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
        "ssl.server.keystore.type": "jks",
        "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
        "ssl.server.truststore.reload.interval": "10000",
        "ssl.server.truststore.type": "jks"
    },
    "anonymization-rules": {
        "anonymization-rules-content": "{ \"rules\":[ { \"name\":\"ip_address\", \"ruleId\": \"Pattern\", \"path\":null, \"pattern\": \"([^a-z0-9\\\\.]|^)[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}([^a-z0-9\\\\.\\\\-]|(\\\\.[^0-9])|$)\", \"extract\": \"[ :\\\\/]?([0-9\\\\.]+)[ :\\\\/]?\", \"excludes\": [\"hdp-select*.*\", \"*version.txt\"], \"shared\":true }, { \"name\":\"domain\", \"ruleId\": \"Domain\", \"path\":null, \"pattern\": \"$DOMAIN_RULE$\", \"shared\":true }, { \"name\":\"delete_oozie_jdbc_password\", \"ruleId\": \"Property\", \"path\":\"oozie-site.xml\", \"property\": \"oozie.service.JPAService.jdbc.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_sqoop_metastore_password\", \"ruleId\": \"Property\", \"path\":\"sqoop-site.xml\", \"property\": \"sqoop.metastore.client.autoconnect.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_hive_metastore_password\", \"ruleId\": \"Property\", \"path\":\"hive-site.xml\", \"property\": \"javax.jdo.option.ConnectionPassword\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_s3_accesskey\", \"ruleId\": \"Property\", \"path\":\"core-site.xml\", \"property\": \"fs.s3.awsAccessKeyId\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_s3_secret_accesskey\", \"ruleId\": \"Property\", \"path\":\"core-site.xml\", \"property\": \"fs.s3.awsSecretAccessKey\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_s3n_accesskey\", \"ruleId\": \"Property\", \"path\":\"core-site.xml\", \"property\": \"fs.s3n.awsAccessKeyId\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_s3n_secret_accesskey\", \"ruleId\": \"Property\", \"path\":\"core-site.xml\", \"property\": \"fs.s3n.awsSecretAccessKey\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_azure_account_key\", \"ruleId\": \"Property\", \"path\":\"core-site.xml\", \"property\": \"fs.azure.account.key.*\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"delete_ldap_password\", \"ruleId\": \"Property\", \"path\":\"core-site.xml\", \"property\": \"hadoop.security.group.mapping.ldap.bind.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"hide_ssl_client_keystore_pwd\", \"ruleId\": \"Property\", \"path\":\"ssl-client.xml\", \"property\": \"ssl.client.keystore.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"hide_ssl_client_truststore_pwd\", \"ruleId\": \"Property\", \"path\":\"ssl-client.xml\", \"property\": \"ssl.client.truststore.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"hide_ssl_server_keystore_keypwd\", \"ruleId\": \"Property\", \"path\":\"ssl-server.xml\", \"property\": \"ssl.server.keystore.keypassword\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"hide_ssl_server_keystore_pwd\", \"ruleId\": \"Property\", \"path\":\"ssl-server.xml\", \"property\": \"ssl.server.keystore.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"hide_ssl_server_truststore_pwd\", \"ruleId\": \"Property\", \"path\":\"ssl-server.xml\", \"property\": \"ssl.server.truststore.password\", \"operation\":\"REPLACE\", \"value\":\"Hidden\" }, { \"name\":\"hide_oozie_pwd_in_java_process_info\", \"ruleId\": \"Pattern\", \"path\":\"java_process.txt\", \"pattern\": \"oozie.https.keystore.pass=([^ ]*)\", \"extract\": \"=([^ ]*)\", \"shared\":false }, { \"name\":\"hide_oozie_pwd_in_process_info\", \"ruleId\": \"Pattern\", \"path\":\"pid.txt\", \"pattern\": \"oozie.https.keystore.pass=([^ ]*)\", \"extract\": \"=([^ ]*)\", \"shared\":false }, { \"name\":\"hide_oozie_pwd_in_ambariagent_log\", \"ruleId\": \"Pattern\", \"path\":\"ambari-agent.log\", \"pattern\": \"oozie.https.keystore.pass=([^ ]*)\", \"extract\": \"=([^ ]*)\", \"shared\":false }, { \"name\":\"delete_oozie_https_keystore_pass\", \"ruleId\": \"Pattern\", \"path\":\"oozie-env.cmd\", \"pattern\":\"OOZIE_HTTPS_KEYSTORE_PASS=([^ ]*)\", \"extract\": \"=([^ ]*)\", \"shared\":false }, { \"name\":\"java_process_ganglia_password\", \"ruleId\": \"Pattern\", \"path\":\"java_process.txt\", \"pattern\":\"ganglia_password=([^ ]*)\", \"extract\": \"=([^ ]*)\", \"shared\":false }, { \"name\":\"hide_ssn_from_logs\", \"ruleId\": \"Pattern\", \"path\":\"*\\\\.log*\", \"pattern\": \"(^|[^0-9x])[0-9x]{3}-[0-9x]{2}-[0-9]{4}($|[^0-9x])\", \"extract\": \"(?<![0-9x])([0-9x-]+)(?![0-9x])\", \"shared\":true }, { \"name\":\"hide_credit_card_from_logs\", \"ruleId\": \"Pattern\", \"path\":\"*\\\\.log*\", \"pattern\": \"(^|[^0-9x])(18|21|3[04678]|4[0-9x]|5[1-5]|60|65)[0-9x]{2}[- ]([0-9x]{4}[- ]){2}[0-9]{0,4}($|[^0-9x])\", \"extract\": \"(?<![0-9x])([0-9x -]+)(?![0-9x])\", \"shared\":true }, { \"name\": \"hide_knox_ldap_password\", \"ruleId\": \"Property\", \"path\": \"services/KNOX/components/KnoxGateway/DEFAULT/conf/topologies/*.xml\", \"property\": \"main.ldapRealm.contextFactory.systemPassword\", \"parentTag\": \"param\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\": \"delete_kms_https_keystore_pass\", \"ruleId\": \"Property\", \"path\": \"kms-log4j.properties\", \"property\": \"KMS_SSL_KEYSTORE_PASS\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\": \"hide_kms_keystore_provider_pwd\", \"ruleId\": \"Property\", \"path\": \"kms-site.xml\", \"property\": \"hadoop.security.keystore.JavaKeyStoreProvider.password\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\": \"hide_ranger_https_keystore_pwd\", \"ruleId\": \"Property\", \"path\": \"xasecure-policymgr-ssl.xml\", \"property\": \"xasecure.policymgr.clientssl.keystore.password\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\": \"hide_ranger_https_truststore_pwd\", \"ruleId\": \"Property\", \"path\": \"xasecure-policymgr-ssl.xml\", \"property\": \"xasecure.policymgr.clientssl.truststore.password\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\":\"delete_ranger_webserver_https_keystore_pwd\", \"ruleId\": \"Property\", \"path\":\"ranger_webserver.properties\", \"property\":\"HTTPS_KEYSTORE_PASS\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\":\"delete_ranger_webserver_attrib_https_keystore_pwd\", \"ruleId\": \"Property\", \"path\":\"ranger_webserver.properties\", \"property\":\"https.attrib.keystorePass\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\":\"delete_ranger_keystore_pwd\", \"ruleId\": \"Property\", \"path\":\"unixauthservice.properties\", \"property\":\"keyStorePassword\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\":\"delete_ranger_truststore_pwd\", \"ruleId\": \"Property\", \"path\":\"unixauthservice.properties\", \"property\":\"trustStorePassword\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" }, { \"name\": \"hide_ambari_ssl_truststore_pwd\", \"ruleId\": \"Property\", \"path\": \"ambari.properties\", \"property\": \"ssl.trustStore.password\", \"operation\": \"REPLACE\", \"value\": \"Hidden\" } ] }"
    },
    "application-properties": {
        "atlas.audit.hbase.tablename": "ATLAS_ENTITY_AUDIT_EVENTS",
        "atlas.audit.hbase.zookeeper.quorum": "%HOSTGROUP::host_group_1%",
        "atlas.audit.zookeeper.session.timeout.ms": "1000",
        "atlas.auth.policy.file": "{{conf_dir}}/policy-store.txt",
        "atlas.authentication.keytab": "/etc/security/keytabs/atlas.service.keytab",
        "atlas.authentication.method.file": "true",
        "atlas.authentication.method.file.filename": "{{conf_dir}}/users-credentials.properties",
        "atlas.authentication.method.kerberos": "false",
        "atlas.authentication.method.ldap": "false",
        "atlas.authentication.method.ldap.ad.base.dn": "",
        "atlas.authentication.method.ldap.ad.bind.dn": "",
        "atlas.authentication.method.ldap.ad.default.role": "ROLE_USER",
        "atlas.authentication.method.ldap.ad.domain": "",
        "atlas.authentication.method.ldap.ad.referral": "ignore",
        "atlas.authentication.method.ldap.ad.url": "",
        "atlas.authentication.method.ldap.ad.user.searchfilter": "(sAMAccountName={0})",
        "atlas.authentication.method.ldap.base.dn": "",
        "atlas.authentication.method.ldap.bind.dn": "",
        "atlas.authentication.method.ldap.default.role": "ROLE_USER",
        "atlas.authentication.method.ldap.groupRoleAttribute": "cn",
        "atlas.authentication.method.ldap.groupSearchBase": "",
        "atlas.authentication.method.ldap.groupSearchFilter": "",
        "atlas.authentication.method.ldap.referral": "ignore",
        "atlas.authentication.method.ldap.type": "none",
        "atlas.authentication.method.ldap.url": "",
        "atlas.authentication.method.ldap.user.searchfilter": "",
        "atlas.authentication.method.ldap.userDNpattern": "uid=",
        "atlas.authentication.principal": "atlas",
        "atlas.authorizer.impl": "simple",
        "atlas.cluster.name": "{{cluster_name}}",
        "atlas.enableTLS": "false",
        "atlas.graph.index.search.backend": "solr5",
        "atlas.graph.index.search.solr.mode": "cloud",
        "atlas.graph.index.search.solr.zookeeper-url": "%HOSTGROUP::host_group_1%:2181/infra-solr",
        "atlas.graph.storage.backend": "hbase",
        "atlas.graph.storage.hbase.table": "atlas_titan",
        "atlas.graph.storage.hostname": "%HOSTGROUP::host_group_1%",
        "atlas.kafka.auto.commit.enable": "false",
        "atlas.kafka.bootstrap.servers": "%HOSTGROUP::host_group_1%:6667",
        "atlas.kafka.hook.group.id": "atlas",
        "atlas.kafka.zookeeper.connect": "%HOSTGROUP::host_group_1%:2181",
        "atlas.kafka.zookeeper.connection.timeout.ms": "200",
        "atlas.kafka.zookeeper.session.timeout.ms": "400",
        "atlas.kafka.zookeeper.sync.time.ms": "20",
        "atlas.lineage.schema.query.Table": "Table where __guid='%s'\\, columns",
        "atlas.lineage.schema.query.hive_table": "hive_table where __guid='%s'\\, columns",
        "atlas.notification.create.topics": "true",
        "atlas.notification.embedded": "false",
        "atlas.notification.replicas": "1",
        "atlas.notification.topics": "ATLAS_HOOK,ATLAS_ENTITIES",
        "atlas.rest.address": "http://vgt-imaster-0.novalocal:21000",
        "atlas.server.http.port": "21000",
        "atlas.server.https.port": "21443",
        "atlas.solr.kerberos.enable": "false"
    },
    "atlas-env": {
        "atlas_server_max_new_size": "600",
        "atlas_server_metadata_size": "50000",
        "atlas_server_xmx": "2048",
        "atlas_solr_shards": "1",
        "metadata_classpath": "",
        "metadata_conf_file": "atlas-application.properties",
        "metadata_data_dir": "/var/lib/atlas/data",
        "metadata_expanded_war_dir": "./server/webapp",
        "metadata_log_dir": "/var/log/atlas",
        "metadata_opts": "-Dlog4j.configuration=atlas-log4j.xml",
        "metadata_pid_dir": "/var/run/atlas",
        "metadata_user": "atlas"
    },
    "atlas-log4j": {
        "atlas_log_level": "info",
        "audit_log_level": "info"
    },
    "capacity-scheduler": {
        "yarn.scheduler.capacity.default.minimum-user-limit-percent": "100",
        "yarn.scheduler.capacity.maximum-am-resource-percent": "0.2",
        "yarn.scheduler.capacity.maximum-applications": "10000",
        "yarn.scheduler.capacity.node-locality-delay": "40",
        "yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
        "yarn.scheduler.capacity.root.accessible-node-labels": "*",
        "yarn.scheduler.capacity.root.acl_administer_queue": "*",
        "yarn.scheduler.capacity.root.capacity": "100",
        "yarn.scheduler.capacity.root.default.acl_administer_jobs": "*",
        "yarn.scheduler.capacity.root.default.acl_submit_applications": "*",
        "yarn.scheduler.capacity.root.default.capacity": "100",
        "yarn.scheduler.capacity.root.default.maximum-capacity": "100",
        "yarn.scheduler.capacity.root.default.state": "RUNNING",
        "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
        "yarn.scheduler.capacity.root.queues": "default"
    },
    "cluster-env": {
        "alerts_repeat_tolerance": "1",
        "command_retry_enabled": "true",
        "command_retry_max_time_in_sec": "600",
        "commands_to_retry": "INSTALL,START",
        "fetch_nonlocal_groups": "true",
        "ignore_bad_mounts": "false",
        "ignore_groupsusers_create": "false",
        "kerberos_domain": "EXAMPLE.COM",
        "manage_dirs_on_root": "true",
        "managed_hdfs_resource_property_names": "",
        "one_dir_per_partition": "false",
        "override_uid": "true",
        "recovery_enabled": "true",
        "recovery_lifetime_max_count": "1024",
        "recovery_max_count": "6",
        "recovery_retry_interval": "5",
        "recovery_type": "AUTO_START",
        "recovery_window_in_minutes": "60",
        "repo_suse_rhel_template": "[{{repo_id}}] name={{repo_id}} {% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %} path=/ enabled=1 gpgcheck=0",
        "repo_ubuntu_template": "{{package_type}} {{base_url}} {{components}}",
        "security_enabled": "false",
        "smokeuser": "ambari-qa",
        "smokeuser_keytab": "/etc/security/keytabs/smokeuser.headless.keytab",
        "stack_features": "{\"stack_features\": [{\"min_version\": \"2.0.0.0\", \"max_version\": \"2.2.0.0\", \"name\": \"snappy\", \"description\": \"Snappy compressor/decompressor support\"}, {\"min_version\": \"2.2.1.0\", \"name\": \"lzo\", \"description\": \"LZO libraries support\"}, {\"min_version\": \"2.1.0.0\", \"name\": \"express_upgrade\", \"description\": \"Express upgrade support\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"rolling_upgrade\", \"description\": \"Rolling upgrade support\"}, {\"min_version\": \"2.3.4.0\", \"name\": \"kafka_acl_migration_support\", \"description\": \"ACL migration support\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"secure_zookeeper\", \"description\": \"Protect ZNodes with SASL acl in secure clusters\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"config_versioning\", \"description\": \"Configurable versions support\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"datanode_non_root\", \"description\": \"DataNode running as non-root support (AMBARI-7615)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"remove_ranger_hdfs_plugin_env\", \"description\": \"HDFS removes Ranger env files (AMBARI-14299)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"ranger\", \"description\": \"Ranger Service support\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_tagsync_component\", \"description\": \"Ranger Tagsync component support (AMBARI-14383)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"phoenix\", \"description\": \"Phoenix Service support\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"nfs\", \"description\": \"NFS support\"}, {\"min_version\": \"2.2.0.0\", \"max_version\": \"2.3.0.0\", \"name\": \"tez_for_spark\", \"description\": \"Tez dependency for Spark\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"timeline_state_store\", \"description\": \"Yarn application timeline-service supports state store property (AMBARI-11442)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"copy_tarball_to_hdfs\", \"description\": \"Copy tarball to HDFS support (AMBARI-12113)\"}, {\"min_version\": \"2.4.0.0\", \"name\": \"spark_16plus\", \"description\": \"Spark 1.6+\"}, {\"min_version\": \"2.3.2.0\", \"name\": \"spark_thriftserver\", \"description\": \"Spark Thrift Server\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"storm_kerberos\", \"description\": \"Storm Kerberos support (AMBARI-7570)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"storm_ams\", \"description\": \"Storm AMS integration (AMBARI-10710)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"kafka_listeners\", \"description\": \"Kafka listeners (AMBARI-10984)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"kafka_kerberos\", \"description\": \"Kafka Kerberos support (AMBARI-10984)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"pig_on_tez\", \"description\": \"Pig on Tez support (AMBARI-7863)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"ranger_usersync_non_root\", \"description\": \"Ranger Usersync as non-root user (AMBARI-10416)\"}, {\"min_version\": \"2.2.0.0\", \"max_version\": \"2.4.99.99\", \"name\": \"ranger_audit_db_support\", \"description\": \"Ranger Audit to DB support\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"accumulo_kerberos_user_auth\", \"description\": \"Accumulo Kerberos User Auth (AMBARI-10163)\"}, {\"min_version\": \"2.3.2.0\", \"name\": \"knox_versioned_data_dir\", \"description\": \"Use versioned data dir for Knox (AMBARI-13164)\"}, {\"min_version\": \"2.3.8.0\", \"name\": \"knox_sso_topology\", \"description\": \"Knox SSO Topology support (AMBARI-13975)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"atlas_rolling_upgrade\", \"description\": \"Rolling upgrade support for Atlas\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"oozie_admin_user\", \"description\": \"Oozie install user as an Oozie admin user (AMBARI-7976)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"oozie_create_hive_tez_configs\", \"description\": \"Oozie create configs for Ambari Hive and Tez deployments (AMBARI-8074)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"oozie_setup_shared_lib\", \"description\": \"Oozie setup tools used to shared Oozie lib to HDFS (AMBARI-7240)\"}, {\"min_version\": \"2.0.0.0\", \"name\": \"oozie_host_kerberos\", \"description\": \"Oozie in secured clusters uses _HOST in Kerberos principal (AMBARI-9775)\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"falcon_extensions\", \"description\": \"Falcon Extension\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"hive_metastore_upgrade_schema\", \"description\": \"Hive metastore upgrade schema support (AMBARI-11176)\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"hive_server_interactive\", \"description\": \"Hive server interactive support (AMBARI-15573)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"hive_webhcat_specific_configs\", \"description\": \"Hive webhcat specific configurations support (AMBARI-12364)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"hive_purge_table\", \"description\": \"Hive purge table support (AMBARI-12260)\"}, {\"min_version\": \"2.2.3.0\", \"max_version\": \"2.2.5.0\", \"name\": \"hive_server2_kerberized_env\", \"description\": \"Hive server2 working on kerberized environment (AMBARI-13749)\"}, {\"min_version\": \"2.2.0.0\", \"name\": \"hive_env_heapsize\", \"description\": \"Hive heapsize property defined in hive-env (AMBARI-12801)\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_kms_hsm_support\", \"description\": \"Ranger KMS HSM support (AMBARI-15752)\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_log4j_support\", \"description\": \"Ranger supporting log-4j properties (AMBARI-15681)\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_kerberos_support\", \"description\": \"Ranger Kerberos support\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"hive_metastore_site_support\", \"description\": \"Hive Metastore site support\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_usersync_password_jceks\", \"description\": \"Saving Ranger Usersync credentials in jceks\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_install_infra_client\", \"description\": \"Ambari Infra Service support\"}, {\"min_version\": \"2.3.99.0\", \"max_version\": \"2.4.0.0\", \"name\": \"falcon_atlas_support_2_3\", \"description\": \"Falcon Atlas integration support for 2.3 stack\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"falcon_atlas_support\", \"description\": \"Falcon Atlas integration\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"hbase_home_directory\", \"description\": \"Hbase home directory in HDFS needed for HBASE backup\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"spark_livy\", \"description\": \"Livy as slave component of spark\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"spark_livy2\", \"description\": \"Livy as slave component of spark\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"atlas_ranger_plugin_support\", \"description\": \"Atlas Ranger plugin support\"}, {\"min_version\": \"2.3.0.0\", \"max_version\": \"2.4.99.99\", \"name\": \"atlas_conf_dir_in_path\", \"description\": \"Prepend the Atlas conf dir (/etc/atlas/conf) to the classpath of Storm and Falcon\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"atlas_upgrade_support\", \"description\": \"Atlas supports express and rolling upgrades\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"atlas_hook_support\", \"description\": \"Atlas support for hooks in Hive, Storm, Falcon, and Sqoop\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_pid_support\", \"description\": \"Ranger Service support pid generation AMBARI-16756\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_kms_pid_support\", \"description\": \"Ranger KMS Service support pid generation\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_admin_password_change\", \"description\": \"Allow ranger admin credentials to be specified during cluster creation (AMBARI-17000)\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"ranger_setup_db_on_start\", \"description\": \"Allows setup of ranger db and java patches to be called multiple times on each START\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"storm_metrics_apache_classes\", \"description\": \"Metrics sink for Storm that uses Apache class names\"}, {\"min_version\": \"2.2.0.0\", \"max_version\": \"2.4.0.0\", \"name\": \"spark_java_opts_support\", \"description\": \"Allow Spark to generate java-opts file\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"atlas_hbase_setup\", \"description\": \"Use script to create Atlas tables in Hbase and set permissions for Atlas user.\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"ranger_hive_plugin_jdbc_url\", \"description\": \"Handle Ranger hive repo config jdbc url change for stack 2.5 (AMBARI-18386)\"}, {\"min_version\": \"2.5.0.0\", \"name\": \"zkfc_version_advertised\", \"description\": \"ZKFC advertise version\"}, {\"max_version\": \"2.5.9.9\", \"name\": \"phoenix_core_hdfs_site_required\", \"description\": \"HDFS and CORE site required for Phoenix\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"ranger_tagsync_ssl_xml_support\", \"description\": \"Ranger Tagsync ssl xml support.\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"ranger_xml_configuration\", \"description\": \"Ranger code base support xml configurations\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"kafka_ranger_plugin_support\", \"description\": \"Ambari stack changes for Ranger Kafka Plugin (AMBARI-11299)\"}, {\"min_version\": \"2.3.0.0\", \"name\": \"yarn_ranger_plugin_support\", \"description\": \"Implement Stack changes for Ranger Yarn Plugin integration (AMBARI-10866)\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"ranger_solr_config_support\", \"description\": \"Showing Ranger solrconfig.xml on UI\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"hive_interactive_atlas_hook_required\", \"description\": \"Registering Atlas Hook for Hive Interactive.\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"core_site_for_ranger_plugins\", \"description\": \"Adding core-site.xml in when Ranger plugin is enabled for Storm, Kafka, and Knox.\"}, {\"max_version\": \"2.5.9.9\", \"name\": \"atlas_install_hook_package_support\", \"description\": \"Stop installing packages from 2.6\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"atlas_hdfs_site_on_namenode_ha\", \"description\": \"Need to create hdfs-site under atlas-conf dir when Namenode-HA is enabled.\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"hive_interactive_ga\", \"description\": \"Hive Interactive GA support\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"secure_ranger_ssl_password\", \"description\": \"Securing Ranger Admin and Usersync SSL and Trustore related passwords in jceks\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"ranger_kms_ssl\", \"description\": \"Ranger KMS SSL properties in ambari stack\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"nifi_encrypt_config\", \"description\": \"Encrypt sensitive properties written to nifi property file\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"toolkit_config_update\", \"description\": \"Support separate input and output for toolkit configuration\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"admin_toolkit_support\", \"description\": \"Supports the nifi admin toolkit\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"tls_toolkit_san\", \"description\": \"Support subject alternative name flag\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"nifi_jaas_conf_create\", \"description\": \"Create NIFI jaas configuration when kerberos is enabled\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"atlas_core_site_support\", \"description\": \"Need to create core-site under Atlas conf directory.\"}, {\"min_version\": \"2.6.0.0\", \"name\": \"hadoop_custom_extensions\", \"description\": \"Support hadoop custom extensions\"}, {\"min_version\": \"2.6.3.0\", \"name\": \"registry_remove_rootpath\", \"description\": \"Registry remove root path setting\"}, {\"min_version\": \"2.6.99.99\", \"name\": \"kafka_extended_sasl_support\", \"description\": \"Support SASL PLAIN and GSSAPI\"}, {\"min_version\": \"2.2.0.0\", \"max_version\": \"2.6.0.0\", \"name\": \"oozie_extjs_included\", \"description\": \"ExtJS is included in the repository and automatically installed by Ambari\"}, {\"min_version\": \"2.6.5.0\", \"name\": \"nifi_encrypted_authorizers_config\", \"description\": \"Support encrypted authorizers.xml configuration for version 3.1 onwards\"}]}", 
        "stack_root": "/usr/hdp",
        "stack_tools": "{ \"stack_selector\": [\"hdp-select\", \"/usr/bin/hdp-select\", \"hdp-select\"], \"conf_selector\": [\"conf-select\", \"/usr/bin/conf-select\", \"conf-select\"] }",
        "user_group": "hadoop"
    },
    "core-site": {
        "fs.defaultFS": "hdfs://%HOSTGROUP::host_group_1%:8020",
        "fs.swift.impl": "org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem",
        "fs.swift.service.sahara.auth.endpoint.prefix": "/endpoints/AUTH_",
        "fs.swift.service.sahara.auth.url": "http://172.18.168.16:5000/v2.0/tokens/",
        "fs.swift.service.sahara.http.port": "8080",
        "fs.swift.service.sahara.https.port": "443",
        "fs.swift.service.sahara.public": "true",
        "fs.swift.service.sahara.tenant": "admin",
        "fs.trash.interval": "360",
        "ha.failover-controller.active-standby-elector.zk.op.retries": "120",
        "hadoop.http.authentication.simple.anonymous.allowed": "true",
        "hadoop.proxyuser.falcon.groups": "*",
        "hadoop.proxyuser.falcon.hosts": "*",
        "hadoop.proxyuser.hbase.groups": "*",
        "hadoop.proxyuser.hbase.hosts": "*",
        "hadoop.proxyuser.hcat.groups": "*",
        "hadoop.proxyuser.hcat.hosts": "%HOSTGROUP::host_group_1%",
        "hadoop.proxyuser.hdfs.groups": "*",
        "hadoop.proxyuser.hdfs.hosts": "*",
        "hadoop.proxyuser.hive.groups": "*",
        "hadoop.proxyuser.hive.hosts": "%HOSTGROUP::host_group_1%",
        "hadoop.proxyuser.livy.groups": "*",
        "hadoop.proxyuser.livy.hosts": "*",
        "hadoop.proxyuser.oozie.groups": "*",
        "hadoop.proxyuser.oozie.hosts": "%HOSTGROUP::host_group_1%",
        "hadoop.proxyuser.root.groups": "*",
        "hadoop.proxyuser.root.hosts": "vgt-imaster-0.novalocal",
        "hadoop.security.auth_to_local": "DEFAULT",
        "hadoop.security.authentication": "simple",
        "hadoop.security.authorization": "false",
        "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
        "io.file.buffer.size": "131072",
        "io.serializations": "org.apache.hadoop.io.serializer.WritableSerialization",
        "ipc.client.connect.max.retries": "50",
        "ipc.client.connection.maxidletime": "30000",
        "ipc.client.idlethreshold": "8000",
        "ipc.server.tcpnodelay": "true",
        "mapreduce.jobtracker.webinterface.trusted": "false",
        "net.topology.script.file.name": "/etc/hadoop/conf/topology_script.py"
    },
    "falcon-atlas-application.properties": {
        "atlas.hook.falcon.keepAliveTime": "10",
        "atlas.hook.falcon.maxThreads": "5",
        "atlas.hook.falcon.minThreads": "5",
        "atlas.hook.falcon.numRetries": "3",
        "atlas.hook.falcon.queueSize": "1000",
        "atlas.hook.falcon.synchronous": "false"
    },
    "falcon-client.properties": {
        "falcon.url": "http://{{falcon_host}}:{{falcon_port}}"
    },
    "falcon-env": {
        "falcon.embeddedmq": "true",
        "falcon.embeddedmq.data": "/hadoop/falcon/embeddedmq/data",
        "falcon.emeddedmq.port": "61616",
        "falcon_apps_hdfs_dir": "/apps/falcon",
        "falcon_local_dir": "/hadoop/falcon",
        "falcon_log_dir": "/var/log/falcon",
        "falcon_pid_dir": "/var/run/falcon",
        "falcon_port": "15000",
        "falcon_user": "falcon",
        "supports_hive_dr": "true"
    },
    "falcon-runtime.properties": {
        "*.domain": "${falcon.app.type}",
        "*.log.cleanup.frequency.days.retention": "days(7)",
        "*.log.cleanup.frequency.hours.retention": "minutes(1)",
        "*.log.cleanup.frequency.minutes.retention": "hours(6)",
        "*.log.cleanup.frequency.months.retention": "months(3)"
    },
    "falcon-startup.properties": {
        "*.ConfigSyncService.impl": "org.apache.falcon.resource.ConfigSyncService",
        "*.ProcessInstanceManager.impl": "org.apache.falcon.resource.InstanceManager",
        "*.SchedulableEntityManager.impl": "org.apache.falcon.resource.SchedulableEntityManager",
        "*.application.services": "org.apache.falcon.security.AuthenticationInitializationService,\\ org.apache.falcon.workflow.WorkflowJobEndNotificationService, \\ org.apache.falcon.service.ProcessSubscriberService,\\ org.apache.falcon.extensions.ExtensionService,\\ org.apache.falcon.service.LifecyclePolicyMap,\\ org.apache.falcon.entity.store.ConfigurationStore,\\ org.apache.falcon.rerun.service.RetryService,\\ org.apache.falcon.rerun.service.LateRunService,\\ org.apache.falcon.service.LogCleanupService,\\ org.apache.falcon.metadata.MetadataMappingService{{atlas_application_class_addition}}",
        "*.broker.impl.class": "org.apache.activemq.ActiveMQConnectionFactory",
        "*.broker.ttlInMins": "4320",
        "*.broker.url": "tcp://%HOSTGROUP::host_group_1%:61616",
        "*.catalog.service.impl": "org.apache.falcon.catalog.HiveCatalogService",
        "*.config.store.uri": "file:///hadoop/falcon/store",
        "*.configstore.listeners": "org.apache.falcon.entity.v0.EntityGraph,\\ org.apache.falcon.entity.ColoClusterRelation,\\ org.apache.falcon.group.FeedGroupMap,\\ org.apache.falcon.service.SharedLibraryHostingService",
        "*.domain": "${falcon.app.type}",
        "*.entity.topic": "FALCON.ENTITY.TOPIC",
        "*.extension.store.uri": "/apps/falcon/extensions",
        "*.falcon.authentication.type": "simple",
        "*.falcon.cleanup.service.frequency": "days(1)",
        "*.falcon.enableTLS": "false",
        "*.falcon.feed.lifecycle.policies": "org.apache.falcon.lifecycle.retention.AgeBasedDelete",
        "*.falcon.feed.lifecycle.policy.builders": "org.apache.falcon.lifecycle.engine.oozie.retention.AgeBasedDeleteBuilder",
        "*.falcon.graph.blueprints.graph": "com.thinkaurelius.titan.core.TitanFactory",
        "*.falcon.graph.preserve.history": "false",
        "*.falcon.graph.serialize.path": "/hadoop/falcon/data/lineage",
        "*.falcon.graph.storage.backend": "berkeleyje",
        "*.falcon.graph.storage.directory": "/hadoop/falcon/data/lineage/graphdb",
        "*.falcon.http.authentication.blacklisted.users": "",
        "*.falcon.http.authentication.cookie.domain": "EXAMPLE.COM",
        "*.falcon.http.authentication.kerberos.name.rules": "DEFAULT",
        "*.falcon.http.authentication.simple.anonymous.allowed": "true",
        "*.falcon.http.authentication.token.validity": "36000",
        "*.falcon.http.authentication.type": "simple",
        "*.falcon.security.authorization.admin.groups": "falcon",
        "*.falcon.security.authorization.admin.users": "falcon,ambari-qa",
        "*.falcon.security.authorization.enabled": "false",
        "*.falcon.security.authorization.provider": "org.apache.falcon.security.DefaultAuthorizationProvider",
        "*.falcon.security.authorization.superusergroup": "falcon",
        "*.hive.shared.libs": "hive-exec,hive-metastore,hive-common,hive-service,hive-hcatalog-server-extensions,\\ hive-hcatalog-core,hive-jdbc,hive-webhcat-java-client",
        "*.internal.queue.size": "1000",
        "*.journal.impl": "org.apache.falcon.transaction.SharedFileSystemJournal",
        "*.lifecycle.engine.impl": "org.apache.falcon.lifecycle.engine.oozie.OoziePolicyBuilderFactory",
        "*.max.retry.failure.count": "1",
        "*.oozie.feed.workflow.builder": "org.apache.falcon.workflow.OozieFeedWorkflowBuilder",
        "*.oozie.process.workflow.builder": "org.apache.falcon.workflow.OozieProcessWorkflowBuilder",
        "*.retry.recorder.path": "${falcon.log.dir}/retry",
        "*.shared.libs": "activemq-all,ant,geronimo-j2ee-management,jms,json-simple,oozie-client,spring-jms,commons-lang3,commons-el",
        "*.system.lib.location": "${falcon.home}/server/webapp/${falcon.app.type}/WEB-INF/lib",
        "*.workflow.engine.impl": "org.apache.falcon.workflow.engine.OozieWorkflowEngine",
        "prism.application.services": "org.apache.falcon.entity.store.ConfigurationStore",
        "prism.configstore.listeners": "org.apache.falcon.entity.v0.EntityGraph,\\ org.apache.falcon.entity.ColoClusterRelation,\\ org.apache.falcon.group.FeedGroupMap"
    },
    "flume-env": {
        "flume_conf_dir": "/etc/flume/conf",
        "flume_log_dir": "/var/log/flume",
        "flume_run_dir": "/var/run/flume",
        "flume_user": "flume"
    },
    "gateway-site": {
        "gateway.gateway.conf.dir": "deployments",
        "gateway.hadoop.kerberos.secured": "false",
        "gateway.path": "gateway",
        "gateway.port": "8443",
        "java.security.auth.login.config": "/etc/knox/conf/krb5JAASLogin.conf",
        "java.security.krb5.conf": "/etc/knox/conf/krb5.conf",
        "sun.security.krb5.debug": "true"
    },
    "hadoop-env": {
        "dtnode_heapsize": "1024m",
        "hadoop_heapsize": "1024",
        "hadoop_pid_dir_prefix": "/var/run/hadoop",
        "hadoop_root_logger": "INFO,RFA",
        "hdfs_log_dir_prefix": "/var/log/hadoop",
        "hdfs_tmp_dir": "/tmp",
        "hdfs_user": "hdfs",
        "hdfs_user_nofile_limit": "128000",
        "hdfs_user_nproc_limit": "65536",
        "keyserver_host": "",
        "keyserver_port": "",
        "namenode_backup_dir": "/tmp/upgrades",
        "namenode_heapsize": "1024m",
        "namenode_opt_maxnewsize": "128m",
        "namenode_opt_maxpermsize": "256m",
        "namenode_opt_newsize": "128m",
        "namenode_opt_permsize": "128m",
        "nfsgateway_heapsize": "1024",
        "proxyuser_group": "users"
    },
    "hadoop-policy": {
        "security.admin.operations.protocol.acl": "hadoop",
        "security.client.datanode.protocol.acl": "*",
        "security.client.protocol.acl": "*",
        "security.datanode.protocol.acl": "*",
        "security.inter.datanode.protocol.acl": "*",
        "security.inter.tracker.protocol.acl": "*",
        "security.job.client.protocol.acl": "*",
        "security.job.task.protocol.acl": "*",
        "security.namenode.protocol.acl": "*",
        "security.refresh.policy.protocol.acl": "hadoop",
        "security.refresh.usertogroups.mappings.protocol.acl": "hadoop"
    },
    "hbase-env": {
        "hbase_java_io_tmpdir": "/tmp",
        "hbase_log_dir": "/var/log/hbase",
        "hbase_master_heapsize": "1024m",
        "hbase_pid_dir": "/var/run/hbase",
        "hbase_regionserver_heapsize": "2048m",
        "hbase_regionserver_shutdown_timeout": "30",
        "hbase_regionserver_xmn_max": "512",
        "hbase_regionserver_xmn_ratio": "0.2",
        "hbase_user": "hbase",
        "hbase_user_nofile_limit": "32000",
        "hbase_user_nproc_limit": "16000",
        "phoenix_sql_enabled": "false"
    },
    "hbase-policy": {
        "security.admin.protocol.acl": "*",
        "security.client.protocol.acl": "*",
        "security.masterregion.protocol.acl": "*"
    },
    "hbase-site": {
        "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
        "hbase.bulkload.staging.dir": "/apps/hbase/staging",
        "hbase.client.keyvalue.maxsize": "1048576",
        "hbase.client.retries.number": "35",
        "hbase.client.scanner.caching": "100",
        "hbase.cluster.distributed": "true",
        "hbase.coprocessor.master.classes": "",
        "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint",
        "hbase.defaults.for.version.skip": "true",
        "hbase.hregion.majorcompaction": "604800000",
        "hbase.hregion.majorcompaction.jitter": "0.50",
        "hbase.hregion.max.filesize": "10737418240",
        "hbase.hregion.memstore.block.multiplier": "4",
        "hbase.hregion.memstore.flush.size": "134217728",
        "hbase.hregion.memstore.mslab.enabled": "true",
        "hbase.hstore.blockingStoreFiles": "10",
        "hbase.hstore.compaction.max": "10",
        "hbase.hstore.compactionThreshold": "3",
        "hbase.local.dir": "${hbase.tmp.dir}/local",
        "hbase.master.info.bindAddress": "0.0.0.0",
        "hbase.master.info.port": "16010",
        "hbase.master.port": "16000",
        "hbase.master.ui.readonly": "false",
        "hbase.regionserver.global.memstore.size": "0.4",
        "hbase.regionserver.handler.count": "30",
        "hbase.regionserver.info.port": "16030",
        "hbase.regionserver.port": "16020",
        "hbase.regionserver.wal.codec": "org.apache.hadoop.hbase.regionserver.wal.WALCellCodec",
        "hbase.rootdir": "hdfs://%HOSTGROUP::host_group_1%:8020/apps/hbase/data",
        "hbase.rpc.protection": "authentication",
        "hbase.rpc.timeout": "90000",
        "hbase.security.authentication": "simple",
        "hbase.security.authorization": "false",
        "hbase.superuser": "hbase",
        "hbase.tmp.dir": "/tmp/hbase-${user.name}",
        "hbase.zookeeper.property.clientPort": "2181",
        "hbase.zookeeper.quorum": "%HOSTGROUP::host_group_1%",
        "hbase.zookeeper.useMulti": "true",
        "hfile.block.cache.size": "0.40",
        "phoenix.query.timeoutMs": "60000",
        "zookeeper.recovery.retry": "6",
        "zookeeper.session.timeout": "90000",
        "zookeeper.znode.parent": "/hbase-unsecure"
    },
    "hdfs-site": {
        "dfs.block.access.token.enable": "true",
        "dfs.blockreport.initialDelay": "120",
        "dfs.blocksize": "134217728",
        "dfs.client.read.shortcircuit": "true",
        "dfs.client.read.shortcircuit.streams.cache.size": "4096",
        "dfs.client.retry.policy.enabled": "false",
        "dfs.cluster.administrators": "hdfs",
        "dfs.content-summary.limit": "5000",
        "dfs.datanode.address": "0.0.0.0:50010",
        "dfs.datanode.balance.bandwidthPerSec": "6250000",
        "dfs.datanode.data.dir": "/hadoop/hdfs/data",
        "dfs.datanode.data.dir.perm": "750",
        "dfs.datanode.du.reserved": "20124585472",
        "dfs.datanode.failed.volumes.tolerated": "0",
        "dfs.datanode.http.address": "0.0.0.0:50075",
        "dfs.datanode.https.address": "0.0.0.0:50475",
        "dfs.datanode.ipc.address": "0.0.0.0:8010",
        "dfs.datanode.max.transfer.threads": "16384",
        "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
        "dfs.encrypt.data.transfer.cipher.suites": "AES/CTR/NoPadding",
        "dfs.heartbeat.interval": "3",
        "dfs.hosts.exclude": "/etc/hadoop/conf/dfs.exclude",
        "dfs.http.policy": "HTTP_ONLY",
        "dfs.https.port": "50470",
        "dfs.journalnode.edits.dir": "/hadoop/hdfs/journalnode",
        "dfs.journalnode.http-address": "0.0.0.0:8480",
        "dfs.journalnode.https-address": "0.0.0.0:8481",
        "dfs.namenode.accesstime.precision": "0",
        "dfs.namenode.audit.log.async": "true",
        "dfs.namenode.avoid.read.stale.datanode": "true",
        "dfs.namenode.avoid.write.stale.datanode": "true",
        "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary",
        "dfs.namenode.checkpoint.edits.dir": "${dfs.namenode.checkpoint.dir}",
        "dfs.namenode.checkpoint.period": "21600",
        "dfs.namenode.checkpoint.txns": "1000000",
        "dfs.namenode.fslock.fair": "false",
        "dfs.namenode.handler.count": "200",
        "dfs.namenode.http-address": "%HOSTGROUP::host_group_1%:50070",
        "dfs.namenode.https-address": "%HOSTGROUP::host_group_1%:50470",
        "dfs.namenode.name.dir": "/hadoop/hdfs/namenode",
        "dfs.namenode.name.dir.restore": "true",
        "dfs.namenode.rpc-address": "%HOSTGROUP::host_group_1%:8020",
        "dfs.namenode.safemode.threshold-pct": "1.000",
        "dfs.namenode.secondary.http-address": "%HOSTGROUP::host_group_1%:50090",
        "dfs.namenode.stale.datanode.interval": "30000",
        "dfs.namenode.startup.delay.block.deletion.sec": "3600",
        "dfs.namenode.write.stale.datanode.ratio": "1.0f",
        "dfs.permissions.enabled": "true",
        "dfs.permissions.superusergroup": "hdfs",
        "dfs.replication": "3",
        "dfs.replication.max": "50",
        "dfs.support.append": "true",
        "dfs.webhdfs.enabled": "true",
        "fs.permissions.umask-mode": "022",
        "nfs.exports.allowed.hosts": "* rw",
        "nfs.file.dump.dir": "/tmp/.hdfs-nfs"
    },
    "hive-atlas-application.properties": {
        "atlas.hook.hive.keepAliveTime": "10",
        "atlas.hook.hive.maxThreads": "5",
        "atlas.hook.hive.minThreads": "5",
        "atlas.hook.hive.numRetries": "3",
        "atlas.hook.hive.queueSize": "1000",
        "atlas.hook.hive.synchronous": "false"
    },
    "hive-env": {
        "hcat_log_dir": "/var/log/webhcat",
        "hcat_pid_dir": "/var/run/webhcat",
        "hcat_user": "hcat",
        "hive.client.heapsize": "1024",
        "hive.heapsize": "6017",
        "hive.metastore.heapsize": "2005",
        "hive_ambari_database": "MySQL",
        "hive_database": "New MySQL Database",
        "hive_database_name": "hive",
        "hive_database_type": "mysql",
        "hive_exec_orc_storage_strategy": "SPEED",
        "hive_log_dir": "/var/log/hive",
        "hive_pid_dir": "/var/run/hive",
        "hive_security_authorization": "None",
        "hive_timeline_logging_enabled": "true",
        "hive_txn_acid": "off",
        "hive_user": "hive",
        "hive_user_nofile_limit": "32000",
        "hive_user_nproc_limit": "16000",
        "webhcat_user": "hcat"
    },
    "hive-interactive-env": {
        "enable_hive_interactive": "false",
        "llap_app_name": "llap0",
        "llap_headroom_space": "6144",
        "llap_heap_size": "0",
        "llap_java_opts": "-XX:+AlwaysPreTouch {% if java_version > 7 %}-XX:+UseG1GC -XX:TLABSize=8m -XX:+ResizeTLAB -XX:+UseNUMA -XX:+AggressiveOpts -XX:MetaspaceSize=1024m -XX:InitiatingHeapOccupancyPercent=80 -XX:MaxGCPauseMillis=200{% else %}-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC{% endif %}",
        "llap_log_level": "INFO",
        "llap_queue_capacity": "0",
        "num_llap_nodes": "1",
        "num_retries_for_checking_llap_status": "10",
        "slider_am_container_mb": "341"
    },
    "hive-interactive-site": {
        "hive.driver.parallel.compilation": "true",
        "hive.exec.orc.split.strategy": "HYBRID",
        "hive.execution.engine": "tez",
        "hive.execution.mode": "llap",
        "hive.llap.auto.allow.uber": "false",
        "hive.llap.client.consistent.splits": "true",
        "hive.llap.daemon.allow.permanent.fns": "false",
        "hive.llap.daemon.num.executors": "1",
        "hive.llap.daemon.queue.name": "default",
        "hive.llap.daemon.rpc.port": "15001",
        "hive.llap.daemon.service.hosts": "@llap0",
        "hive.llap.daemon.task.scheduler.enable.preemption": "true",
        "hive.llap.daemon.vcpus.per.instance": "${hive.llap.daemon.num.executors}",
        "hive.llap.daemon.yarn.container.mb": "341",
        "hive.llap.daemon.yarn.shuffle.port": "15551",
        "hive.llap.execution.mode": "all",
        "hive.llap.io.enabled": "true",
        "hive.llap.io.memory.mode": "",
        "hive.llap.io.memory.size": "0",
        "hive.llap.io.threadpool.size": "2",
        "hive.llap.io.use.lrfu": "true",
        "hive.llap.management.rpc.port": "15004",
        "hive.llap.object.cache.enabled": "true",
        "hive.llap.task.scheduler.locality.delay": "-1",
        "hive.llap.zk.sm.connectionString": "%HOSTGROUP::host_group_1%:2181",
        "hive.mapjoin.hybridgrace.hashtable": "false",
        "hive.metastore.event.listeners": "",
        "hive.metastore.uris": "",
        "hive.optimize.dynamic.partition.hashjoin": "true",
        "hive.prewarm.enabled": "false",
        "hive.server2.enable.doAs": "false",
        "hive.server2.tez.default.queues": "default",
        "hive.server2.tez.initialize.default.sessions": "true",
        "hive.server2.tez.sessions.per.default.queue": "1",
        "hive.server2.thrift.http.port": "10501",
        "hive.server2.thrift.port": "10500",
        "hive.server2.webui.port": "10502",
        "hive.server2.webui.use.ssl": "false",
        "hive.server2.zookeeper.namespace": "hiveserver2-hive2",
        "hive.tez.bucket.pruning": "true",
        "hive.tez.exec.print.summary": "true",
        "hive.tez.input.generate.consistent.splits": "true",
        "hive.vectorized.execution.mapjoin.minmax.enabled": "true",
        "hive.vectorized.execution.mapjoin.native.enabled": "true",
        "hive.vectorized.execution.mapjoin.native.fast.hashtable.enabled": "true",
        "hive.vectorized.execution.reduce.enabled": "true",
        "llap.shuffle.connection-keep-alive.enable": "true",
        "llap.shuffle.connection-keep-alive.timeout": "60"
    },
    "hive-site": {
        "ambari.hive.db.schema.name": "hive",
        "atlas.hook.hive.maxThreads": "1",
        "atlas.hook.hive.minThreads": "1",
        "atlas.rest.address": "http://%HOSTGROUP::host_group_1%:21000",
        "datanucleus.autoCreateSchema": "false",
        "datanucleus.cache.level2.type": "none",
        "datanucleus.fixedDatastore": "true",
        "hive.auto.convert.join": "true",
        "hive.auto.convert.join.noconditionaltask": "true",
        "hive.auto.convert.join.noconditionaltask.size": "286331153",
        "hive.auto.convert.sortmerge.join": "true",
        "hive.auto.convert.sortmerge.join.to.mapjoin": "false",
        "hive.cbo.enable": "true",
        "hive.cli.print.header": "false",
        "hive.cluster.delegation.token.store.class": "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
        "hive.cluster.delegation.token.store.zookeeper.connectString": "%HOSTGROUP::host_group_1%:2181",
        "hive.cluster.delegation.token.store.zookeeper.znode": "/hive/cluster/delegation",
        "hive.compactor.abortedtxn.threshold": "1000",
        "hive.compactor.check.interval": "300L",
        "hive.compactor.delta.num.threshold": "10",
        "hive.compactor.delta.pct.threshold": "0.1f",
        "hive.compactor.initiator.on": "false",
        "hive.compactor.worker.threads": "0",
        "hive.compactor.worker.timeout": "86400L",
        "hive.compute.query.using.stats": "true",
        "hive.conf.restricted.list": "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
        "hive.convert.join.bucket.mapjoin.tez": "false",
        "hive.default.fileformat": "TextFile",
        "hive.default.fileformat.managed": "TextFile",
        "hive.enforce.bucketing": "false",
        "hive.enforce.sorting": "true",
        "hive.enforce.sortmergebucketmapjoin": "true",
        "hive.exec.compress.intermediate": "false",
        "hive.exec.compress.output": "false",
        "hive.exec.dynamic.partition": "true",
        "hive.exec.dynamic.partition.mode": "strict",
        "hive.exec.failure.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
        "hive.exec.max.created.files": "100000",
        "hive.exec.max.dynamic.partitions": "5000",
        "hive.exec.max.dynamic.partitions.pernode": "2000",
        "hive.exec.orc.compression.strategy": "SPEED",
        "hive.exec.orc.default.compress": "ZLIB",
        "hive.exec.orc.default.stripe.size": "67108864",
        "hive.exec.orc.encoding.strategy": "SPEED",
        "hive.exec.parallel": "false",
        "hive.exec.parallel.thread.number": "8",
        "hive.exec.post.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook,org.apache.atlas.hive.hook.HiveHook",
        "hive.exec.pre.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
        "hive.exec.reducers.bytes.per.reducer": "67108864",
        "hive.exec.reducers.max": "1009",
        "hive.exec.scratchdir": "/tmp/hive",
        "hive.exec.submit.local.task.via.child": "true",
        "hive.exec.submitviachild": "false",
        "hive.execution.engine": "tez",
        "hive.fetch.task.aggr": "false",
        "hive.fetch.task.conversion": "more",
        "hive.fetch.task.conversion.threshold": "1073741824",
        "hive.limit.optimize.enable": "true",
        "hive.limit.pushdown.memory.usage": "0.04",
        "hive.map.aggr": "true",
        "hive.map.aggr.hash.force.flush.memory.threshold": "0.9",
        "hive.map.aggr.hash.min.reduction": "0.5",
        "hive.map.aggr.hash.percentmemory": "0.5",
        "hive.mapjoin.bucket.cache.size": "10000",
        "hive.mapjoin.optimized.hashtable": "true",
        "hive.mapred.reduce.tasks.speculative.execution": "false",
        "hive.merge.mapfiles": "true",
        "hive.merge.mapredfiles": "false",
        "hive.merge.orcfile.stripe.level": "true",
        "hive.merge.rcfile.block.level": "true",
        "hive.merge.size.per.task": "256000000",
        "hive.merge.smallfiles.avgsize": "16000000",
        "hive.merge.tezfiles": "false",
        "hive.metastore.authorization.storage.checks": "false",
        "hive.metastore.cache.pinobjtypes": "Table,Database,Type,FieldSchema,Order",
        "hive.metastore.client.connect.retry.delay": "5s",
        "hive.metastore.client.socket.timeout": "1800s",
        "hive.metastore.connect.retries": "24",
        "hive.metastore.execute.setugi": "true",
        "hive.metastore.failure.retries": "24",
        "hive.metastore.kerberos.keytab.file": "/etc/security/keytabs/hive.service.keytab",
        "hive.metastore.kerberos.principal": "hive/_HOST@EXAMPLE.COM",
        "hive.metastore.pre.event.listeners": "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
        "hive.metastore.sasl.enabled": "false",
        "hive.metastore.server.max.threads": "100000",
        "hive.metastore.uris": "thrift://%HOSTGROUP::host_group_1%:9083",
        "hive.metastore.warehouse.dir": "/apps/hive/warehouse",
        "hive.optimize.bucketmapjoin": "true",
        "hive.optimize.bucketmapjoin.sortedmerge": "false",
        "hive.optimize.constant.propagation": "true",
        "hive.optimize.index.filter": "true",
        "hive.optimize.metadataonly": "true",
        "hive.optimize.null.scan": "true",
        "hive.optimize.reducededuplication": "true",
        "hive.optimize.reducededuplication.min.reducer": "4",
        "hive.optimize.sort.dynamic.partition": "false",
        "hive.orc.compute.splits.num.threads": "10",
        "hive.orc.splits.include.file.footer": "false",
        "hive.prewarm.enabled": "false",
        "hive.prewarm.numcontainers": "3",
        "hive.security.authenticator.manager": "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
        "hive.security.authorization.enabled": "false",
        "hive.security.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
        "hive.security.metastore.authenticator.manager": "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
        "hive.security.metastore.authorization.auth.reads": "true",
        "hive.security.metastore.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
        "hive.server2.allow.user.substitution": "true",
        "hive.server2.authentication": "NONE",
        "hive.server2.authentication.spnego.keytab": "HTTP/_HOST@EXAMPLE.COM",
        "hive.server2.authentication.spnego.principal": "/etc/security/keytabs/spnego.service.keytab",
        "hive.server2.enable.doAs": "true",
        "hive.server2.logging.operation.enabled": "true",
        "hive.server2.logging.operation.log.location": "/tmp/hive/operation_logs",
        "hive.server2.max.start.attempts": "5",
        "hive.server2.support.dynamic.service.discovery": "true",
        "hive.server2.table.type.mapping": "CLASSIC",
        "hive.server2.tez.default.queues": "default",
        "hive.server2.tez.initialize.default.sessions": "false",
        "hive.server2.tez.sessions.per.default.queue": "1",
        "hive.server2.thrift.http.path": "cliservice",
        "hive.server2.thrift.http.port": "10001",
        "hive.server2.thrift.max.worker.threads": "500",
        "hive.server2.thrift.port": "10000",
        "hive.server2.thrift.sasl.qop": "auth",
        "hive.server2.transport.mode": "binary",
        "hive.server2.use.SSL": "false",
        "hive.server2.zookeeper.namespace": "hiveserver2",
        "hive.smbjoin.cache.rows": "10000",
        "hive.stats.autogather": "true",
        "hive.stats.dbclass": "fs",
        "hive.stats.fetch.column.stats": "true",
        "hive.stats.fetch.partition.stats": "true",
        "hive.support.concurrency": "false",
        "hive.tez.auto.reducer.parallelism": "true",
        "hive.tez.container.size": "1024",
        "hive.tez.cpu.vcores": "-1",
        "hive.tez.dynamic.partition.pruning": "true",
        "hive.tez.dynamic.partition.pruning.max.data.size": "104857600",
        "hive.tez.dynamic.partition.pruning.max.event.size": "1048576",
        "hive.tez.input.format": "org.apache.hadoop.hive.ql.io.HiveInputFormat",
        "hive.tez.java.opts": "-server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps",
        "hive.tez.log.level": "INFO",
        "hive.tez.max.partition.factor": "2.0",
        "hive.tez.min.partition.factor": "0.25",
        "hive.tez.smb.number.waves": "0.5",
        "hive.txn.manager": "org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager",
        "hive.txn.max.open.batch": "1000",
        "hive.txn.timeout": "300",
        "hive.user.install.directory": "/user/",
        "hive.vectorized.execution.enabled": "true",
        "hive.vectorized.execution.reduce.enabled": "false",
        "hive.vectorized.groupby.checkinterval": "4096",
        "hive.vectorized.groupby.flush.percent": "0.1",
        "hive.vectorized.groupby.maxentries": "100000",
        "hive.zookeeper.client.port": "2181",
        "hive.zookeeper.namespace": "hive_zookeeper_namespace",
        "hive.zookeeper.quorum": "%HOSTGROUP::host_group_1%:2181",
        "javax.jdo.option.ConnectionDriverName": "com.mysql.jdbc.Driver",
        "javax.jdo.option.ConnectionURL": "jdbc:mysql://%HOSTGROUP::host_group_1%/hive?createDatabaseIfNotExist=true",
        "javax.jdo.option.ConnectionUserName": "hive"
    },
    "hivemetastore-site": {
        "hive.metastore.metrics.enabled": "true",
        "hive.service.metrics.file.location": "/var/log/hive/hivemetastore-report.json",
        "hive.service.metrics.hadoop2.component": "hivemetastore",
        "hive.service.metrics.reporter": "JSON_FILE, JMX, HADOOP2"
    },
    "hiveserver2-interactive-site": {
        "hive.async.log.enabled": "false",
        "hive.metastore.metrics.enabled": "true",
        "hive.service.metrics.file.location": "/var/log/hive/hiveserver2Interactive-report.json",
        "hive.service.metrics.hadoop2.component": "hiveserver2",
        "hive.service.metrics.reporter": "JSON_FILE, JMX, HADOOP2"
    },
    "hiveserver2-site": {
        "hive.metastore.metrics.enabled": "true",
        "hive.security.authorization.enabled": "false",
        "hive.service.metrics.file.location": "/var/log/hive/hiveserver2-report.json",
        "hive.service.metrics.hadoop2.component": "hiveserver2",
        "hive.service.metrics.reporter": "JSON_FILE, JMX, HADOOP2"
    },
    "hst-agent-conf": {
        "agent.loglevel": "INFO",
        "agent.tmp_dir": "/var/lib/smartsense/hst-agent/data/tmp",
        "bundle.logs_to_capture": "(.*).log$,(.*).out$",
        "server.connection_retry_count": "100",
        "server.connection_retry_interval": "10",
        "upload.retry_count": "100",
        "upload.retry_interval": "15"
    },
    "hst-log4j": {
        "hst-log4j-content": "# Copyright 2014 The Apache Software Foundation # # Licensed to the Apache Software Foundation (ASF) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. The ASF licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # Define some default values that can be overridden by system properties # Root logger option log4j.rootLogger=INFO,file log4j.appender.file=org.apache.log4j.RollingFileAppender log4j.appender.file.File={{hst_log_dir}}/${log.file.name} log4j.appender.file.MaxFileSize=30MB log4j.appender.file.MaxBackupIndex=10 log4j.appender.file.layout=org.apache.log4j.PatternLayout log4j.appender.file.layout.ConversionPattern=%d{DATE} %5p [%t] %c{1}:%L - %m%n # HST logger log4j.logger.com.hortonworks=INFO com.github.oxo42.stateless4j=WARN log4j.logger.com.sun.jersey=WARN log4j.logger.org.eclipse.jetty.server=INFO",
        "hst_log_dir": "/var/log/hst"
    },
    "hst-server-conf": {
        "agent.request.processing.timeout": "7200",
        "agent.request.syncup.interval": "180",
        "client.threadpool.size.max": "40",
        "customer.account.name": "unspecified",
        "customer.notification.email": "unspecified",
        "customer.smartsense.id": "unspecified",
        "gateway.host": "embedded",
        "gateway.port": "9451",
        "gateway.registration.port": "9450",
        "server.port": "9000",
        "server.storage.dir": "/var/lib/smartsense/hst-server/data",
        "server.tmp.dir": "/var/lib/smartsense/hst-server/tmp"
    },
    "infra-solr-client-log4j": {
        "infra_solr_client_log_dir": "/var/log/ambari-infra-solr-client"
    },
    "infra-solr-env": {
        "infra_solr_datadir": "/opt/ambari_infra_solr/data",
        "infra_solr_jmx_port": "18886",
        "infra_solr_kerberos_keytab": "/etc/security/keytabs/infra_solr.service.keytab",
        "infra_solr_kerberos_name_rules": "DEFAULT",
        "infra_solr_kerberos_principal": "infra-solr",
        "infra_solr_keystore_location": "/etc/security/serverKeys/infra.solr.keyStore.jks",
        "infra_solr_keystore_type": "jks",
        "infra_solr_log_dir": "/var/log/ambari-infra-solr",
        "infra_solr_maxmem": "2048",
        "infra_solr_minmem": "1024",
        "infra_solr_pid_dir": "/var/run/ambari-infra-solr",
        "infra_solr_port": "8886",
        "infra_solr_ssl_enabled": "false",
        "infra_solr_truststore_location": "/etc/security/serverKeys/infra.solr.trustStore.jks",
        "infra_solr_truststore_type": "jks",
        "infra_solr_user": "infra-solr",
        "infra_solr_web_kerberos_keytab": "/etc/security/keytabs/spnego.service.keytab",
        "infra_solr_web_kerberos_principal": "HTTP/_HOST@EXAMPLE.COM",
        "infra_solr_znode": "/infra-solr"
    },
    "kafka-broker": {
        "auto.create.topics.enable": "true",
        "auto.leader.rebalance.enable": "true",
        "compression.type": "producer",
        "controlled.shutdown.enable": "true",
        "controlled.shutdown.max.retries": "3",
        "controlled.shutdown.retry.backoff.ms": "5000",
        "controller.message.queue.size": "10",
        "controller.socket.timeout.ms": "30000",
        "default.replication.factor": "1",
        "delete.topic.enable": "false",
        "external.kafka.metrics.exclude.prefix": "kafka.network.RequestMetrics,kafka.server.DelayedOperationPurgatory,kafka.server.BrokerTopicMetrics.BytesRejectedPerSec",
        "external.kafka.metrics.include.prefix": "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetCommit.98percentile,kafka.network.RequestMetrics.ResponseQueueTimeMs.request.Offsets.95percentile,kafka.network.RequestMetrics.ResponseSendTimeMs.request.Fetch.95percentile,kafka.network.RequestMetrics.RequestsPerSec.request",
        "fetch.purgatory.purge.interval.requests": "10000",
        "kafka.ganglia.metrics.group": "kafka",
        "kafka.ganglia.metrics.port": "8671",
        "kafka.ganglia.metrics.reporter.enabled": "true",
        "kafka.metrics.reporters": "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter",
        "kafka.timeline.metrics.host": "{{metric_collector_host}}",
        "kafka.timeline.metrics.maxRowCacheSize": "10000",
        "kafka.timeline.metrics.port": "{{metric_collector_port}}",
        "kafka.timeline.metrics.protocol": "{{metric_collector_protocol}}",
        "kafka.timeline.metrics.reporter.enabled": "true",
        "kafka.timeline.metrics.reporter.sendInterval": "5900",
        "kafka.timeline.metrics.truststore.path": "{{metric_truststore_path}}",
        "kafka.timeline.metrics.truststore.type": "{{metric_truststore_type}}",
        "leader.imbalance.check.interval.seconds": "300",
        "leader.imbalance.per.broker.percentage": "10",
        "listeners": "PLAINTEXT://localhost:6667",
        "log.cleanup.interval.mins": "10",
        "log.dirs": "/kafka-logs",
        "log.index.interval.bytes": "4096",
        "log.index.size.max.bytes": "10485760",
        "log.retention.bytes": "-1",
        "log.retention.hours": "168",
        "log.roll.hours": "168",
        "log.segment.bytes": "1073741824",
        "message.max.bytes": "1000000",
        "min.insync.replicas": "1",
        "num.io.threads": "8",
        "num.network.threads": "3",
        "num.partitions": "1",
        "num.recovery.threads.per.data.dir": "1",
        "num.replica.fetchers": "1",
        "offset.metadata.max.bytes": "4096",
        "offsets.commit.required.acks": "-1",
        "offsets.commit.timeout.ms": "5000",
        "offsets.load.buffer.size": "5242880",
        "offsets.retention.check.interval.ms": "600000",
        "offsets.retention.minutes": "86400000",
        "offsets.topic.compression.codec": "0",
        "offsets.topic.num.partitions": "50",
        "offsets.topic.replication.factor": "3",
        "offsets.topic.segment.bytes": "104857600",
        "port": "6667",
        "producer.purgatory.purge.interval.requests": "10000",
        "queued.max.requests": "500",
        "replica.fetch.max.bytes": "1048576",
        "replica.fetch.min.bytes": "1",
        "replica.fetch.wait.max.ms": "500",
        "replica.high.watermark.checkpoint.interval.ms": "5000",
        "replica.lag.max.messages": "4000",
        "replica.lag.time.max.ms": "10000",
        "replica.socket.receive.buffer.bytes": "65536",
        "replica.socket.timeout.ms": "30000",
        "socket.receive.buffer.bytes": "102400",
        "socket.request.max.bytes": "104857600",
        "socket.send.buffer.bytes": "102400",
        "zookeeper.connect": "%HOSTGROUP::host_group_1%:2181",
        "zookeeper.connection.timeout.ms": "25000",
        "zookeeper.session.timeout.ms": "30000",
        "zookeeper.sync.time.ms": "2000"
    },
    "kafka-env": {
        "is_supported_kafka_ranger": "true",
        "kafka_log_dir": "/var/log/kafka",
        "kafka_pid_dir": "/var/run/kafka",
        "kafka_user": "kafka",
        "kafka_user_nofile_limit": "128000",
        "kafka_user_nproc_limit": "65536"
    },
    "knox-env": {
        "knox_group": "knox",
        "knox_pid_dir": "/var/run/knox",
        "knox_user": "knox"
    },
    "livy-conf": {
        "livy.environment": "production",
        "livy.impersonation.enabled": "true",
        "livy.server.csrf_protection.enabled": "true",
        "livy.server.port": "8998",
        "livy.server.session.timeout": "3600000"
    },
    "livy-env": {
        "livy_group": "livy",
        "livy_log_dir": "/var/log/livy",
        "livy_pid_dir": "/var/run/livy",
        "livy_user": "livy",
        "spark_home": "/usr/hdp/current/spark-client"
    },
    "logfeeder-env": {
        "logfeeder_kerberos_keytab": "/etc/security/keytabs/logfeeder.service.keytab",
        "logfeeder_kerberos_principal": "logfeeder",
        "logfeeder_keystore_location": "/etc/security/serverKeys/logsearch.keyStore.jks",
        "logfeeder_keystore_type": "jks",
        "logfeeder_log_dir": "/var/log/ambari-logsearch-logfeeder",
        "logfeeder_max_mem": "512m",
        "logfeeder_pid_dir": "/var/run/ambari-logsearch-logfeeder",
        "logfeeder_solr_audit_logs_enable": "true",
        "logfeeder_solr_service_logs_enable": "true",
        "logfeeder_truststore_location": "/etc/security/serverKeys/logsearch.trustStore.jks",
        "logfeeder_truststore_type": "jks"
    },
    "logfeeder-properties": {
        "logfeeder.checkpoint.folder": "/etc/ambari-logsearch-logfeeder/conf/checkpoints",
        "logfeeder.config.files": "{default_config_files}",
        "logfeeder.log.filter.enable": "true",
        "logfeeder.metrics.collector.hosts": "{metrics_collector_hosts}",
        "logfeeder.solr.config.interval": "5"
    },
    "logsearch-admin-json": {
        "logsearch_admin_username": "ambari_logsearch_admin"
    },
    "logsearch-audit_logs-solrconfig": {
        "logsearch_audit_logs_max_retention": "7",
        "logsearch_audit_logs_merge_factor": "5"
    },
    "logsearch-env": {
        "logsearch_app_max_memory": "1024",
        "logsearch_debug_enabled": "false",
        "logsearch_debug_port": "5005",
        "logsearch_kerberos_keytab": "/etc/security/keytabs/logsearch.service.keytab",
        "logsearch_kerberos_principal": "logsearch",
        "logsearch_keystore_location": "/etc/security/serverKeys/logsearch.keyStore.jks",
        "logsearch_keystore_type": "jks",
        "logsearch_log_dir": "/var/log/ambari-logsearch-portal",
        "logsearch_pid_dir": "/var/run/ambari-logsearch-portal",
        "logsearch_solr_audit_logs_zk_node": "{infra_solr_znode}",
        "logsearch_solr_audit_logs_zk_quorum": "{zookeeper_quorum}",
        "logsearch_truststore_location": "/etc/security/serverKeys/logsearch.trustStore.jks",
        "logsearch_truststore_type": "jks",
        "logsearch_ui_port": "61888",
        "logsearch_ui_protocol": "http",
        "logsearch_user": "logsearch"
    },
    "logsearch-properties": {
        "logsearch.audit.logs.split.interval.mins": "15",
        "logsearch.collection.audit.logs.numshards": "2",
        "logsearch.collection.audit.logs.replication.factor": "1",
        "logsearch.collection.service.logs.numshards": "2",
        "logsearch.collection.service.logs.replication.factor": "1",
        "logsearch.external.auth.enabled": "true",
        "logsearch.external.auth.host_url": "{ambari_server_auth_host_url}",
        "logsearch.external.auth.login_url": "/api/v1/users/$USERNAME/privileges?fields=*",
        "logsearch.logfeeder.include.default.level": "FATAL,ERROR,WARN",
        "logsearch.service.logs.fields": "logtime,level,event_count,ip,type,seq_num,path,file,line_number,host,log_message,id",
        "logsearch.service.logs.split.interval.mins": "15",
        "logsearch.solr.collection.audit.logs": "audit_logs",
        "logsearch.solr.collection.service.logs": "hadoop_logs",
        "logsearch.solr.metrics.collector.hosts": "{metrics_collector_hosts}"
    },
    "logsearch-service_logs-solrconfig": {
        "logsearch_service_logs_max_retention": "7",
        "logsearch_service_logs_merge_factor": "5"
    },
    "mahout-env": {
        "mahout_user": "mahout"
    },
    "mapred-env": {
        "jobhistory_heapsize": "900",
        "mapred_log_dir_prefix": "/var/log/hadoop-mapreduce",
        "mapred_pid_dir_prefix": "/var/run/hadoop-mapreduce",
        "mapred_user": "mapred",
        "mapred_user_nofile_limit": "32768",
        "mapred_user_nproc_limit": "65536"
    },
    "mapred-site": {
        "mapreduce.admin.map.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
        "mapreduce.admin.reduce.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
        "mapreduce.admin.user.env": "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
        "mapreduce.am.max-attempts": "2",
        "mapreduce.application.classpath": "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
        "mapreduce.application.framework.path": "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
        "mapreduce.cluster.administrators": "hadoop",
        "mapreduce.framework.name": "yarn",
        "mapreduce.job.counters.max": "130",
        "mapreduce.job.emit-timeline-data": "false",
        "mapreduce.job.queuename": "default",
        "mapreduce.job.reduce.slowstart.completedmaps": "0.05",
        "mapreduce.jobhistory.address": "%HOSTGROUP::host_group_1%:10020",
        "mapreduce.jobhistory.bind-host": "0.0.0.0",
        "mapreduce.jobhistory.done-dir": "/mr-history/done",
        "mapreduce.jobhistory.http.policy": "HTTP_ONLY",
        "mapreduce.jobhistory.intermediate-done-dir": "/mr-history/tmp",
        "mapreduce.jobhistory.recovery.enable": "true",
        "mapreduce.jobhistory.recovery.store.class": "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
        "mapreduce.jobhistory.recovery.store.leveldb.path": "/hadoop/mapreduce/jhs",
        "mapreduce.jobhistory.webapp.address": "%HOSTGROUP::host_group_1%:19888",
        "mapreduce.map.java.opts": "-Xmx1228m",
        "mapreduce.map.log.level": "INFO",
        "mapreduce.map.memory.mb": "1536",
        "mapreduce.map.output.compress": "false",
        "mapreduce.map.sort.spill.percent": "0.7",
        "mapreduce.map.speculative": "false",
        "mapreduce.output.fileoutputformat.compress": "false",
        "mapreduce.output.fileoutputformat.compress.type": "BLOCK",
        "mapreduce.reduce.input.buffer.percent": "0.0",
        "mapreduce.reduce.java.opts": "-Xmx1638m",
        "mapreduce.reduce.log.level": "INFO",
        "mapreduce.reduce.memory.mb": "2048",
        "mapreduce.reduce.shuffle.fetch.retry.enabled": "1",
        "mapreduce.reduce.shuffle.fetch.retry.interval-ms": "1000",
        "mapreduce.reduce.shuffle.fetch.retry.timeout-ms": "30000",
        "mapreduce.reduce.shuffle.input.buffer.percent": "0.7",
        "mapreduce.reduce.shuffle.merge.percent": "0.66",
        "mapreduce.reduce.shuffle.parallelcopies": "30",
        "mapreduce.reduce.speculative": "false",
        "mapreduce.shuffle.port": "13562",
        "mapreduce.task.io.sort.factor": "100",
        "mapreduce.task.io.sort.mb": "859",
        "mapreduce.task.timeout": "300000",
        "yarn.app.mapreduce.am.admin-command-opts": "-Dhdp.version=${hdp.version}",
        "yarn.app.mapreduce.am.command-opts": "-Xmx819m -Dhdp.version=${hdp.version}",
        "yarn.app.mapreduce.am.log.level": "INFO",
        "yarn.app.mapreduce.am.resource.mb": "1024",
        "yarn.app.mapreduce.am.staging-dir": "/user"
    },
    "oozie-env": {
        "oozie_admin_port": "11001",
        "oozie_admin_users": "{oozie_user}, oozie-admin,falcon",
        "oozie_data_dir": "/hadoop/oozie/data",
        "oozie_database": "New Derby Database",
        "oozie_heapsize": "2048m",
        "oozie_log_dir": "/var/log/oozie",
        "oozie_permsize": "256m",
        "oozie_pid_dir": "/var/run/oozie",
        "oozie_tmp_dir": "/var/tmp/oozie",
        "oozie_user": "oozie",
        "oozie_user_nofile_limit": "32000",
        "oozie_user_nproc_limit": "16000"
    },
    "oozie-site": {
        "oozie.action.retry.interval": "30",
        "oozie.authentication.simple.anonymous.allowed": "true",
        "oozie.authentication.type": "simple",
        "oozie.base.url": "http://%HOSTGROUP::host_group_1%:11000/oozie",
        "oozie.credentials.credentialclasses": "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
        "oozie.db.schema.name": "oozie",
        "oozie.service.AuthorizationService.security.enabled": "true",
        "oozie.service.ELService.ext.functions.coord-action-create": "now=org.apache.oozie.extensions.OozieELExtensions#ph2_now, today=org.apache.oozie.extensions.OozieELExtensions#ph2_today, yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday, currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek, lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek, currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth, lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth, currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear, lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear, latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo, future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo, formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime, user=org.apache.oozie.coord.CoordELFunctions#coord_user",
        "oozie.service.ELService.ext.functions.coord-action-create-inst": "now=org.apache.oozie.extensions.OozieELExtensions#ph2_now_inst, today=org.apache.oozie.extensions.OozieELExtensions#ph2_today_inst, yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday_inst, currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek_inst, lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek_inst, currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth_inst, lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth_inst, currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear_inst, lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear_inst, latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo, future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo, formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime, user=org.apache.oozie.coord.CoordELFunctions#coord_user",
        "oozie.service.ELService.ext.functions.coord-action-start": "now=org.apache.oozie.extensions.OozieELExtensions#ph2_now, today=org.apache.oozie.extensions.OozieELExtensions#ph2_today, yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday, currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek, lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek, currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth, lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth, currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear, lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear, latest=org.apache.oozie.coord.CoordELFunctions#ph3_coord_latest, future=org.apache.oozie.coord.CoordELFunctions#ph3_coord_future, dataIn=org.apache.oozie.extensions.OozieELExtensions#ph3_dataIn, instanceTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_nominalTime, dateOffset=org.apache.oozie.coord.CoordELFunctions#ph3_coord_dateOffset, formatTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_formatTime, user=org.apache.oozie.coord.CoordELFunctions#coord_user",
        "oozie.service.ELService.ext.functions.coord-job-submit-data": "now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo, today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo, yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo, currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_currentWeek_echo, lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_lastWeek_echo, currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo, lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo, currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo, lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo, dataIn=org.apache.oozie.extensions.OozieELExtensions#ph1_dataIn_echo, instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_wrap, formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo, dateOffset=org.apache.oozie.coord.CoordELFunctions#ph1_coord_dateOffset_echo, user=org.apache.oozie.coord.CoordELFunctions#coord_user",
        "oozie.service.ELService.ext.functions.coord-job-submit-instances": "now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo, today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo, yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo, currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_currentWeek_echo, lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_lastWeek_echo, currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo, lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo, currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo, lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo, formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo, latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo, future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo",
        "oozie.service.ELService.ext.functions.coord-sla-create": "instanceTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_nominalTime, user=org.apache.oozie.coord.CoordELFunctions#coord_user",
        "oozie.service.ELService.ext.functions.coord-sla-submit": "instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_fixed, user=org.apache.oozie.coord.CoordELFunctions#coord_user",
        "oozie.service.ELService.ext.functions.workflow": "now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo, today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo, yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo, currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo, lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo, currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo, lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo, formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo, latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo, future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo",
        "oozie.service.HadoopAccessorService.hadoop.configurations": "*={{hadoop_conf_dir}}",
        "oozie.service.HadoopAccessorService.kerberos.enabled": "false",
        "oozie.service.HadoopAccessorService.supported.filesystems": "*",
        "oozie.service.JPAService.jdbc.driver": "org.apache.derby.jdbc.EmbeddedDriver",
        "oozie.service.JPAService.jdbc.username": "oozie",
        "oozie.service.ProxyUserService.proxyuser.falcon.groups": "*",
        "oozie.service.ProxyUserService.proxyuser.falcon.hosts": "*",
        "oozie.service.SparkConfigurationService.spark.configurations": "*=spark-conf",
        "oozie.service.URIHandlerService.uri.handlers": "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
        "oozie.services.ext": "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService"
    },
    "ranger-hbase-audit": {
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/hbase/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
        "xasecure.audit.destination.solr": "false",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/hbase/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "NONE",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "true"
    },
    "ranger-hbase-plugin-properties": {
        "REPOSITORY_CONFIG_USERNAME": "hbase",
        "common.name.for.certificate": "",
        "policy_user": "ambari-qa",
        "ranger-hbase-plugin-enabled": "No"
    },
    "ranger-hbase-policymgr-ssl": {
        "xasecure.policymgr.clientssl.keystore": "/usr/hdp/current/hbase-client/conf/ranger-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore": "/usr/hdp/current/hbase-client/conf/ranger-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
    },
    "ranger-hbase-security": {
        "ranger.plugin.hbase.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.hbase.policy.pollIntervalMs": "30000",
        "ranger.plugin.hbase.policy.rest.ssl.config.file": "/etc/hbase/conf/ranger-policymgr-ssl.xml",
        "ranger.plugin.hbase.policy.rest.url": "{{policymgr_mgr_url}}",
        "ranger.plugin.hbase.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
        "ranger.plugin.hbase.service.name": "{{repo_name}}",
        "xasecure.hbase.update.xapolicies.on.grant.revoke": "true"
    },
    "ranger-hdfs-audit": {
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/hadoop/hdfs/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
        "xasecure.audit.destination.solr": "false",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/hadoop/hdfs/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "NONE",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "false"
    },
    "ranger-hdfs-plugin-properties": {
        "REPOSITORY_CONFIG_USERNAME": "hadoop",
        "common.name.for.certificate": "",
        "hadoop.rpc.protection": "authentication",
        "policy_user": "ambari-qa",
        "ranger-hdfs-plugin-enabled": "No"
    },
    "ranger-hdfs-policymgr-ssl": {
        "xasecure.policymgr.clientssl.keystore": "/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore": "/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
    },
    "ranger-hdfs-security": {
        "ranger.plugin.hdfs.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.hdfs.policy.pollIntervalMs": "30000",
        "ranger.plugin.hdfs.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
        "ranger.plugin.hdfs.policy.rest.url": "{{policymgr_mgr_url}}",
        "ranger.plugin.hdfs.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
        "ranger.plugin.hdfs.service.name": "{{repo_name}}",
        "xasecure.add-hadoop-authorization": "true"
    },
    "ranger-hive-audit": {
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/hive/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
        "xasecure.audit.destination.solr": "false",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/hive/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "NONE",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "false"
    },
    "ranger-hive-plugin-properties": {
        "REPOSITORY_CONFIG_USERNAME": "hive",
        "common.name.for.certificate": "",
        "jdbc.driverClassName": "org.apache.hive.jdbc.HiveDriver",
        "policy_user": "ambari-qa"
    },
    "ranger-hive-policymgr-ssl": {
        "xasecure.policymgr.clientssl.keystore": "/usr/hdp/current/hive-server2/conf/ranger-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore": "/usr/hdp/current/hive-server2/conf/ranger-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
    },
    "ranger-hive-security": {
        "ranger.plugin.hive.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.hive.policy.pollIntervalMs": "30000",
        "ranger.plugin.hive.policy.rest.ssl.config.file": "/usr/hdp/current/{{ranger_hive_component}}/conf/conf.server/ranger-policymgr-ssl.xml",
        "ranger.plugin.hive.policy.rest.url": "{{policymgr_mgr_url}}",
        "ranger.plugin.hive.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
        "ranger.plugin.hive.service.name": "{{repo_name}}",
        "xasecure.hive.update.xapolicies.on.grant.revoke": "true"
    },
    "ranger-kafka-audit": {
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/kafka/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
        "xasecure.audit.destination.solr": "false",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/kafka/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "NONE",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "true"
    },
    "ranger-kafka-plugin-properties": {
        "REPOSITORY_CONFIG_USERNAME": "kafka",
        "common.name.for.certificate": "",
        "hadoop.rpc.protection": "",
        "policy_user": "ambari-qa",
        "ranger-kafka-plugin-enabled": "No",
        "zookeeper.connect": "localhost:2181"
    },
    "ranger-kafka-policymgr-ssl": {
        "xasecure.policymgr.clientssl.keystore": "/usr/hdp/current/kafka-broker/config/ranger-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file/{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore": "/usr/hdp/current/kafka-broker/config/ranger-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file/{{credential_file}}"
    },
    "ranger-kafka-security": {
        "ranger.plugin.kafka.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.kafka.policy.pollIntervalMs": "30000",
        "ranger.plugin.kafka.policy.rest.ssl.config.file": "/etc/kafka/conf/ranger-policymgr-ssl.xml",
        "ranger.plugin.kafka.policy.rest.url": "{{policymgr_mgr_url}}",
        "ranger.plugin.kafka.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
        "ranger.plugin.kafka.service.name": "{{repo_name}}"
    },
    "ranger-knox-audit": {
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/knox/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
        "xasecure.audit.destination.solr": "false",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/knox/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "NONE",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "false"
    },
    "ranger-knox-plugin-properties": {
        "KNOX_HOME": "/usr/hdp/current/knox-server",
        "REPOSITORY_CONFIG_USERNAME": "admin",
        "common.name.for.certificate": "",
        "policy_user": "ambari-qa",
        "ranger-knox-plugin-enabled": "No"
    },
    "ranger-knox-policymgr-ssl": {
        "xasecure.policymgr.clientssl.keystore": "/usr/hdp/current/knox-server/conf/ranger-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore": "/usr/hdp/current/knox-server/conf/ranger-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
    },
    "ranger-knox-security": {
        "ranger.plugin.knox.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.knox.policy.pollIntervalMs": "30000",
        "ranger.plugin.knox.policy.rest.ssl.config.file": "/usr/hdp/current/knox-server/conf/ranger-policymgr-ssl.xml",
        "ranger.plugin.knox.policy.rest.url": "{{policymgr_mgr_url}}",
        "ranger.plugin.knox.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminJersey2RESTClient",
        "ranger.plugin.knox.service.name": "{{repo_name}}"
    },
    "ranger-yarn-audit": {
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/hadoop/yarn/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
        "xasecure.audit.destination.solr": "false",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/hadoop/yarn/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "NONE",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "false"
    },
    "ranger-yarn-plugin-properties": {
        "REPOSITORY_CONFIG_USERNAME": "yarn",
        "common.name.for.certificate": "",
        "hadoop.rpc.protection": "",
        "policy_user": "ambari-qa",
        "ranger-yarn-plugin-enabled": "No"
    },
    "ranger-yarn-policymgr-ssl": {
        "xasecure.policymgr.clientssl.keystore": "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore": "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}"
    },
    "ranger-yarn-security": {
        "ranger.plugin.yarn.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.yarn.policy.pollIntervalMs": "30000",
        "ranger.plugin.yarn.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
        "ranger.plugin.yarn.policy.rest.url": "{{policymgr_mgr_url}}",
        "ranger.plugin.yarn.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
        "ranger.plugin.yarn.service.name": "{{repo_name}}"
    },
    "spark-defaults": {
        "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.eventLog.dir": "hdfs:///spark-history",
        "spark.eventLog.enabled": "true",
        "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.history.fs.logDirectory": "hdfs:///spark-history",
        "spark.history.kerberos.keytab": "none",
        "spark.history.kerberos.principal": "none",
        "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
        "spark.history.ui.port": "18080",
        "spark.yarn.containerLauncherMaxThreads": "25",
        "spark.yarn.driver.memoryOverhead": "384",
        "spark.yarn.executor.memoryOverhead": "384",
        "spark.yarn.historyServer.address": "{{spark_history_server_host}}:{{spark_history_ui_port}}",
        "spark.yarn.preserve.staging.files": "false",
        "spark.yarn.queue": "default",
        "spark.yarn.scheduler.heartbeat.interval-ms": "5000",
        "spark.yarn.submit.file.replication": "3"
    },
    "spark-env": {
        "hive_kerberos_keytab": "{{hive_kerberos_keytab}}",
        "hive_kerberos_principal": "{{hive_kerberos_principal}}",
        "spark_daemon_memory": "1024",
        "spark_group": "spark",
        "spark_log_dir": "/var/log/spark",
        "spark_pid_dir": "/var/run/spark",
        "spark_thrift_cmd_opts": "",
        "spark_user": "spark"
    },
    "spark-hive-site-override": {
        "hive.metastore.client.connect.retry.delay": "5",
        "hive.metastore.client.socket.timeout": "1800",
        "hive.server2.enable.doAs": "false",
        "hive.server2.thrift.port": "10015",
        "hive.server2.transport.mode": "binary"
    },
    "spark-thrift-fairscheduler": {
        "fairscheduler_content": "<?xml version=\"1.0\"?> <allocations> <pool name=\"default\"> <schedulingMode>FAIR</schedulingMode> <weight>1</weight> <minShare>2</minShare> </pool> </allocations>"
    },
    "spark-thrift-sparkconf": {
        "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.dynamicAllocation.enabled": "true",
        "spark.dynamicAllocation.initialExecutors": "0",
        "spark.dynamicAllocation.maxExecutors": "10",
        "spark.dynamicAllocation.minExecutors": "0",
        "spark.eventLog.dir": "{{spark_history_dir}}",
        "spark.eventLog.enabled": "true",
        "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.executor.memory": "1g",
        "spark.hadoop.cacheConf": "false",
        "spark.history.fs.logDirectory": "{{spark_history_dir}}",
        "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
        "spark.master": "{{spark_thrift_master}}",
        "spark.scheduler.allocation.file": "{{spark_conf}}/spark-thrift-fairscheduler.xml",
        "spark.scheduler.mode": "FAIR",
        "spark.shuffle.service.enabled": "true",
        "spark.yarn.am.memory": "512m",
        "spark.yarn.queue": "default"
    },
    "spark2-defaults": {
        "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.eventLog.dir": "hdfs:///spark2-history/",
        "spark.eventLog.enabled": "true",
        "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.history.fs.logDirectory": "hdfs:///spark2-history/",
        "spark.history.kerberos.keytab": "none",
        "spark.history.kerberos.principal": "none",
        "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
        "spark.history.ui.port": "18081",
        "spark.yarn.historyServer.address": "{{spark_history_server_host}}:{{spark_history_ui_port}}",
        "spark.yarn.queue": "default"
    },
    "spark2-env": {
        "hive_kerberos_keytab": "{{hive_kerberos_keytab}}",
        "hive_kerberos_principal": "{{hive_kerberos_principal}}",
        "spark_daemon_memory": "1024",
        "spark_group": "spark",
        "spark_log_dir": "/var/log/spark2",
        "spark_pid_dir": "/var/run/spark2",
        "spark_thrift_cmd_opts": "",
        "spark_user": "spark"
    },
    "spark2-hive-site-override": {
        "hive.metastore.client.connect.retry.delay": "5",
        "hive.metastore.client.socket.timeout": "1800",
        "hive.server2.enable.doAs": "false",
        "hive.server2.thrift.port": "10016",
        "hive.server2.transport.mode": "binary"
    },
    "spark2-thrift-fairscheduler": {
        "fairscheduler_content": "<?xml version=\"1.0\"?> <allocations> <pool name=\"default\"> <schedulingMode>FAIR</schedulingMode> <weight>1</weight> <minShare>2</minShare> </pool> </allocations>"
    },
    "spark2-thrift-sparkconf": {
        "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.dynamicAllocation.enabled": "true",
        "spark.dynamicAllocation.initialExecutors": "0",
        "spark.dynamicAllocation.maxExecutors": "10",
        "spark.dynamicAllocation.minExecutors": "0",
        "spark.eventLog.dir": "{{spark_history_dir}}",
        "spark.eventLog.enabled": "true",
        "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.hadoop.cacheConf": "false",
        "spark.history.fs.logDirectory": "{{spark_history_dir}}",
        "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
        "spark.master": "{{spark_thrift_master}}",
        "spark.scheduler.allocation.file": "{{spark_conf}}/spark-thrift-fairscheduler.xml",
        "spark.scheduler.mode": "FAIR",
        "spark.shuffle.service.enabled": "true",
        "spark.yarn.queue": "default"
    },
    "sqoop-atlas-application.properties": {
        "atlas.jaas.KafkaClient.option.renewTicket": "true",
        "atlas.jaas.KafkaClient.option.useTicketCache": "true"
    },
    "sqoop-env": {
        "jdbc_drivers": "",
        "sqoop_user": "sqoop"
    },
    "ssl-client": {
        "ssl.client.keystore.location": "/etc/security/clientKeys/keystore.jks",
        "ssl.client.keystore.type": "jks",
        "ssl.client.truststore.location": "/etc/security/clientKeys/all.jks",
        "ssl.client.truststore.reload.interval": "10000",
        "ssl.client.truststore.type": "jks"
    },
    "ssl-server": {
        "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
        "ssl.server.keystore.type": "jks",
        "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
        "ssl.server.truststore.reload.interval": "10000",
        "ssl.server.truststore.type": "jks"
    },
    "storm-atlas-application.properties": {
        "atlas.hook.storm.numRetries": "3"
    },
    "storm-env": {
        "jmxremote_port": "56431",
        "nimbus_seeds_supported": "true",
        "storm_log_dir": "/var/log/storm",
        "storm_logs_supported": "true",
        "storm_pid_dir": "/var/run/storm",
        "storm_user": "storm",
        "storm_user_nofile_limit": "128000",
        "storm_user_nproc_limit": "65536"
    },
    "storm-site": {
        "_storm.min.ruid": "null",
        "_storm.thrift.nonsecure.transport": "org.apache.storm.security.auth.SimpleTransportPlugin",
        "_storm.thrift.secure.transport": "org.apache.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
        "client.jartransformer.class": "org.apache.storm.hack.StormShadeTransformer",
        "dev.zookeeper.path": "/tmp/dev-storm-zookeeper",
        "drpc.childopts": "-Xmx768m _JAAS_PLACEHOLDER",
        "drpc.invocations.port": "3773",
        "drpc.port": "3772",
        "drpc.queue.size": "128",
        "drpc.request.timeout.secs": "600",
        "drpc.worker.threads": "64",
        "java.library.path": "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib",
        "logviewer.appender.name": "A1",
        "logviewer.childopts": "-Xmx128m _JAAS_PLACEHOLDER",
        "logviewer.port": "8000",
        "metrics.reporter.register": "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter",
        "nimbus.cleanup.inbox.freq.secs": "600",
        "nimbus.file.copy.expiration.secs": "600",
        "nimbus.inbox.jar.expiration.secs": "3600",
        "nimbus.monitor.freq.secs": "10",
        "nimbus.reassign": "true",
        "nimbus.seeds": "['%HOSTGROUP::host_group_2%']",
        "nimbus.supervisor.timeout.secs": "60",
        "nimbus.task.launch.secs": "120",
        "nimbus.task.timeout.secs": "30",
        "nimbus.thrift.max_buffer_size": "1048576",
        "nimbus.thrift.port": "6627",
        "nimbus.thrift.threads": "196",
        "nimbus.topology.validator": "org.apache.storm.nimbus.DefaultTopologyValidator",
        "storm.cluster.mode": "distributed",
        "storm.local.dir": "/hadoop/storm",
        "storm.local.mode.zmq": "false",
        "storm.log.dir": "{{log_dir}}",
        "storm.messaging.netty.buffer_size": "5242880",
        "storm.messaging.netty.client_worker_threads": "1",
        "storm.messaging.netty.max_retries": "30",
        "storm.messaging.netty.max_wait_ms": "1000",
        "storm.messaging.netty.min_wait_ms": "100",
        "storm.messaging.netty.server_worker_threads": "1",
        "storm.messaging.transport": "org.apache.storm.messaging.netty.Context",
        "storm.thrift.transport": "{{storm_thrift_transport}}",
        "storm.topology.submission.notifier.plugin.class": "org.apache.atlas.storm.hook.StormAtlasHook",
        "storm.zookeeper.connection.timeout": "30000",
        "storm.zookeeper.port": "2181",
        "storm.zookeeper.retry.interval": "1000",
        "storm.zookeeper.retry.intervalceiling.millis": "30000",
        "storm.zookeeper.retry.times": "5",
        "storm.zookeeper.root": "/storm",
        "storm.zookeeper.servers": "['%HOSTGROUP::host_group_1%']",
        "storm.zookeeper.session.timeout": "30000",
        "supervisor.heartbeat.frequency.secs": "5",
        "supervisor.monitor.frequency.secs": "3",
        "supervisor.slots.ports": "[6700, 6701]",
        "supervisor.worker.start.timeout.secs": "120",
        "supervisor.worker.timeout.secs": "30",
        "task.heartbeat.frequency.secs": "3",
        "task.refresh.poll.secs": "10",
        "topology.acker.executors": "null",
        "topology.builtin.metrics.bucket.size.secs": "60",
        "topology.debug": "false",
        "topology.disruptor.wait.strategy": "com.lmax.disruptor.BlockingWaitStrategy",
        "topology.enable.message.timeouts": "true",
        "topology.error.throttle.interval.secs": "10",
        "topology.executor.receive.buffer.size": "1024",
        "topology.executor.send.buffer.size": "1024",
        "topology.fall.back.on.java.serialization": "true",
        "topology.kryo.factory": "org.apache.storm.serialization.DefaultKryoFactory",
        "topology.max.error.report.per.interval": "5",
        "topology.max.replication.wait.time.sec": "{{actual_topology_max_replication_wait_time_sec}}",
        "topology.max.replication.wait.time.sec.default": "60",
        "topology.max.spout.pending": "1000",
        "topology.max.task.parallelism": "null",
        "topology.message.timeout.secs": "30",
        "topology.min.replication.count": "{{actual_topology_min_replication_count}}",
        "topology.min.replication.count.default": "1",
        "topology.optimize": "true",
        "topology.receiver.buffer.size": "8",
        "topology.skip.missing.kryo.registrations": "false",
        "topology.sleep.spout.wait.strategy.time.ms": "1",
        "topology.spout.wait.strategy": "org.apache.storm.spout.SleepSpoutWaitStrategy",
        "topology.state.synchronization.timeout.secs": "60",
        "topology.stats.sample.rate": "0.05",
        "topology.tick.tuple.freq.secs": "null",
        "topology.transfer.buffer.size": "1024",
        "topology.trident.batch.emit.interval.millis": "500",
        "topology.tuple.serializer": "org.apache.storm.serialization.types.ListDelegateSerializer",
        "topology.worker.childopts": "null",
        "topology.worker.shared.thread.pool.size": "4",
        "topology.workers": "1",
        "transactional.zookeeper.port": "null",
        "transactional.zookeeper.root": "/transactional",
        "transactional.zookeeper.servers": "null",
        "ui.childopts": "-Xmx768m _JAAS_PLACEHOLDER",
        "ui.filter": "null",
        "ui.port": "8744",
        "worker.heartbeat.frequency.secs": "1",
        "zmq.hwm": "0",
        "zmq.linger.millis": "5000",
        "zmq.threads": "1"
    },
    "tez-env": {
        "tez_user": "tez"
    },
    "tez-interactive-site": {
        "tez.am.resource.memory.mb": "1536",
        "tez.dag.recovery.enabled": "false",
        "tez.grouping.node.local.only": "true",
        "tez.lib.uris": "/hdp/apps/${hdp.version}/tez_hive2/tez.tar.gz",
        "tez.runtime.pipelined-shuffle.enabled": "false",
        "tez.runtime.pipelined.sorter.lazy-allocate.memory": "true",
        "tez.runtime.report.partition.stats": "true",
        "tez.runtime.shuffle.fetch.buffer.percent": "0.6",
        "tez.runtime.shuffle.fetch.verify-disk-checksum": "false",
        "tez.runtime.shuffle.memory.limit.percent": "0.25",
        "tez.session.am.dag.submit.timeout.secs": "3600"
    },
    "tez-site": {
        "tez.am.am-rm.heartbeat.interval-ms.max": "250",
        "tez.am.container.idle.release-timeout-max.millis": "20000",
        "tez.am.container.idle.release-timeout-min.millis": "10000",
        "tez.am.container.reuse.enabled": "true",
        "tez.am.container.reuse.locality.delay-allocation-millis": "250",
        "tez.am.container.reuse.non-local-fallback.enabled": "false",
        "tez.am.container.reuse.rack-fallback.enabled": "true",
        "tez.am.launch.cluster-default.cmd-opts": "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
        "tez.am.launch.cmd-opts": "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
        "tez.am.launch.env": "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
        "tez.am.log.level": "INFO",
        "tez.am.max.app.attempts": "2",
        "tez.am.maxtaskfailures.per.node": "10",
        "tez.am.resource.memory.mb": "2048",
        "tez.am.tez-ui.history-url.template": "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
        "tez.am.view-acls": "*",
        "tez.cluster.additional.classpath.prefix": "/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
        "tez.counters.max": "10000",
        "tez.counters.max.groups": "3000",
        "tez.generate.debug.artifacts": "false",
        "tez.grouping.max-size": "1073741824",
        "tez.grouping.min-size": "16777216",
        "tez.grouping.split-waves": "1.7",
        "tez.history.logging.service.class": "org.apache.tez.dag.history.logging.ats.ATSV15HistoryLoggingService",
        "tez.lib.uris": "/hdp/apps/${hdp.version}/tez/tez.tar.gz",
        "tez.queue.name": "default",
        "tez.runtime.compress": "true",
        "tez.runtime.compress.codec": "org.apache.hadoop.io.compress.SnappyCodec",
        "tez.runtime.convert.user-payload.to.history-text": "false",
        "tez.runtime.io.sort.mb": "270",
        "tez.runtime.optimize.local.fetch": "true",
        "tez.runtime.pipelined.sorter.sort.threads": "2",
        "tez.runtime.shuffle.fetch.buffer.percent": "0.6",
        "tez.runtime.shuffle.memory.limit.percent": "0.25",
        "tez.runtime.sorter.class": "PIPELINED",
        "tez.runtime.unordered.output.buffer.size-mb": "76",
        "tez.session.am.dag.submit.timeout.secs": "600",
        "tez.session.client.timeout.secs": "-1",
        "tez.shuffle-vertex-manager.max-src-fraction": "0.4",
        "tez.shuffle-vertex-manager.min-src-fraction": "0.2",
        "tez.staging-dir": "/tmp/${user.name}/staging",
        "tez.task.am.heartbeat.counter.interval-ms.max": "4000",
        "tez.task.generate.counters.per.io": "true",
        "tez.task.get-task.sleep.interval-ms.max": "200",
        "tez.task.launch.cluster-default.cmd-opts": "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
        "tez.task.launch.cmd-opts": "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
        "tez.task.launch.env": "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
        "tez.task.max-events-per-heartbeat": "500",
        "tez.task.resource.memory.mb": "1024",
        "tez.use.cluster.hadoop-libs": "false"
    },
    "webhcat-site": {
        "templeton.exec.timeout": "60000",
        "templeton.hadoop": "/usr/hdp/${hdp.version}/hadoop/bin/hadoop",
        "templeton.hadoop.conf.dir": "/etc/hadoop/conf",
        "templeton.hadoop.queue.name": "default",
        "templeton.hcat": "/usr/hdp/${hdp.version}/hive/bin/hcat",
        "templeton.hcat.home": "hive.tar.gz/hive/hcatalog",
        "templeton.hive.archive": "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
        "templeton.hive.extra.files": "/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib",
        "templeton.hive.home": "hive.tar.gz/hive",
        "templeton.hive.path": "hive.tar.gz/hive/bin/hive",
        "templeton.hive.properties": "hive.metastore.local=false,hive.metastore.uris=thrift://%HOSTGROUP::host_group_1%:9083,hive.metastore.sasl.enabled=false",
        "templeton.jar": "/usr/hdp/${hdp.version}/hive/share/webhcat/svr/lib/hive-webhcat-*.jar",
        "templeton.libjars": "/usr/hdp/${hdp.version}/zookeeper/zookeeper.jar,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar",
        "templeton.override.enabled": "false",
        "templeton.pig.archive": "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz",
        "templeton.pig.path": "pig.tar.gz/pig/bin/pig",
        "templeton.port": "50111",
        "templeton.python": "${env.PYTHON_CMD}",
        "templeton.sqoop.archive": "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
        "templeton.sqoop.home": "sqoop.tar.gz/sqoop",
        "templeton.sqoop.path": "sqoop.tar.gz/sqoop/bin/sqoop",
        "templeton.storage.class": "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
        "templeton.streaming.jar": "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
        "templeton.zookeeper.hosts": "%HOSTGROUP::host_group_1%:2181",
        "webhcat.proxyuser.root.groups": "*",
        "webhcat.proxyuser.root.hosts": "vgt-imaster-0.novalocal"
    },
    "yarn-env": {
        "apptimelineserver_heapsize": "1024",
        "is_supported_yarn_ranger": "true",
        "min_user_id": "1000",
        "nodemanager_heapsize": "1024",
        "resourcemanager_heapsize": "1024",
        "service_check.queue.name": "default",
        "yarn_cgroups_enabled": "false",
        "yarn_heapsize": "1024",
        "yarn_log_dir_prefix": "/var/log/hadoop-yarn",
        "yarn_pid_dir_prefix": "/var/run/hadoop-yarn",
        "yarn_user": "yarn",
        "yarn_user_nofile_limit": "32768",
        "yarn_user_nproc_limit": "65536"
    },
    "yarn-site": {
        "hadoop.registry.rm.enabled": "true",
        "hadoop.registry.zk.quorum": "%HOSTGROUP::host_group_1%:2181",
        "yarn.acl.enable": "false",
        "yarn.admin.acl": "yarn",
        "yarn.application.classpath": "$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*",
        "yarn.client.nodemanager-connect.max-wait-ms": "60000",
        "yarn.client.nodemanager-connect.retry-interval-ms": "10000",
        "yarn.http.policy": "HTTP_ONLY",
        "yarn.log-aggregation-enable": "true",
        "yarn.log-aggregation.retain-seconds": "2592000",
        "yarn.log.server.url": "http://%HOSTGROUP::host_group_1%:19888/jobhistory/logs",
        "yarn.node-labels.enabled": "false",
        "yarn.node-labels.fs-store.retry-policy-spec": "2000, 500",
        "yarn.node-labels.fs-store.root-dir": "/system/yarn/node-labels",
        "yarn.nodemanager.address": "0.0.0.0:45454",
        "yarn.nodemanager.admin-env": "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
        "yarn.nodemanager.aux-services": "mapreduce_shuffle,spark_shuffle,spark2_shuffle",
        "yarn.nodemanager.aux-services.mapreduce_shuffle.class": "org.apache.hadoop.mapred.ShuffleHandler",
        "yarn.nodemanager.aux-services.spark2_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
        "yarn.nodemanager.aux-services.spark2_shuffle.classpath": "{{stack_root}}/${hdp.version}/spark2/aux/*",
        "yarn.nodemanager.aux-services.spark_shuffle.class": "org.apache.spark.network.yarn.YarnShuffleService",
        "yarn.nodemanager.aux-services.spark_shuffle.classpath": "{{stack_root}}/${hdp.version}/spark/aux/*",
        "yarn.nodemanager.bind-host": "0.0.0.0",
        "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
        "yarn.nodemanager.container-metrics.unregister-delay-ms": "60000",
        "yarn.nodemanager.container-monitor.interval-ms": "3000",
        "yarn.nodemanager.delete.debug-delay-sec": "0",
        "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage": "90",
        "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb": "1000",
        "yarn.nodemanager.disk-health-checker.min-healthy-disks": "0.25",
        "yarn.nodemanager.health-checker.interval-ms": "135000",
        "yarn.nodemanager.health-checker.script.timeout-ms": "60000",
        "yarn.nodemanager.linux-container-executor.cgroups.hierarchy": "hadoop-yarn",
        "yarn.nodemanager.linux-container-executor.cgroups.mount": "false",
        "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage": "false",
        "yarn.nodemanager.linux-container-executor.group": "hadoop",
        "yarn.nodemanager.linux-container-executor.resources-handler.class": "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
        "yarn.nodemanager.local-dirs": "/hadoop/yarn/local",
        "yarn.nodemanager.log-aggregation.compression-type": "gz",
        "yarn.nodemanager.log-aggregation.debug-enabled": "false",
        "yarn.nodemanager.log-aggregation.num-log-files-per-app": "30",
        "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds": "3600",
        "yarn.nodemanager.log-dirs": "/hadoop/yarn/log",
        "yarn.nodemanager.log.retain-second": "604800",
        "yarn.nodemanager.recovery.dir": "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
        "yarn.nodemanager.recovery.enabled": "true",
        "yarn.nodemanager.remote-app-log-dir": "/app-logs",
        "yarn.nodemanager.remote-app-log-dir-suffix": "logs",
        "yarn.nodemanager.resource.cpu-vcores": "6",
        "yarn.nodemanager.resource.memory-mb": "9216",
        "yarn.nodemanager.resource.percentage-physical-cpu-limit": "80",
        "yarn.nodemanager.vmem-check-enabled": "false",
        "yarn.nodemanager.vmem-pmem-ratio": "2.1",
        "yarn.resourcemanager.address": "%HOSTGROUP::host_group_1%:8050",
        "yarn.resourcemanager.admin.address": "%HOSTGROUP::host_group_1%:8141",
        "yarn.resourcemanager.am.max-attempts": "2",
        "yarn.resourcemanager.bind-host": "0.0.0.0",
        "yarn.resourcemanager.connect.max-wait.ms": "900000",
        "yarn.resourcemanager.connect.retry-interval.ms": "30000",
        "yarn.resourcemanager.fs.state-store.retry-policy-spec": "2000, 500",
        "yarn.resourcemanager.fs.state-store.uri": "",
        "yarn.resourcemanager.ha.enabled": "false",
        "yarn.resourcemanager.hostname": "%HOSTGROUP::host_group_1%",
        "yarn.resourcemanager.nodes.exclude-path": "/etc/hadoop/conf/yarn.exclude",
        "yarn.resourcemanager.recovery.enabled": "true",
        "yarn.resourcemanager.resource-tracker.address": "%HOSTGROUP::host_group_1%:8025",
        "yarn.resourcemanager.scheduler.address": "%HOSTGROUP::host_group_1%:8030",
        "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
        "yarn.resourcemanager.scheduler.monitor.enable": "false",
        "yarn.resourcemanager.state-store.max-completed-applications": "${yarn.resourcemanager.max-completed-applications}",
        "yarn.resourcemanager.store.class": "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
        "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size": "10",
        "yarn.resourcemanager.system-metrics-publisher.enabled": "true",
        "yarn.resourcemanager.webapp.address": "%HOSTGROUP::host_group_1%:8088",
        "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled": "false",
        "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::host_group_1%:8090",
        "yarn.resourcemanager.work-preserving-recovery.enabled": "true",
        "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms": "10000",
        "yarn.resourcemanager.zk-acl": "world:anyone:rwcda",
        "yarn.resourcemanager.zk-address": "%HOSTGROUP::host_group_1%:2181",
        "yarn.resourcemanager.zk-num-retries": "1000",
        "yarn.resourcemanager.zk-retry-interval-ms": "1000",
        "yarn.resourcemanager.zk-state-store.parent-path": "/rmstore",
        "yarn.resourcemanager.zk-timeout-ms": "10000",
        "yarn.scheduler.maximum-allocation-mb": "9216",
        "yarn.scheduler.maximum-allocation-vcores": "6",
        "yarn.scheduler.minimum-allocation-mb": "1024",
        "yarn.scheduler.minimum-allocation-vcores": "1",
        "yarn.timeline-service.address": "%HOSTGROUP::host_group_1%:10200",
        "yarn.timeline-service.bind-host": "0.0.0.0",
        "yarn.timeline-service.client.max-retries": "30",
        "yarn.timeline-service.client.retry-interval-ms": "1000",
        "yarn.timeline-service.enabled": "true",
        "yarn.timeline-service.entity-group-fs-store.active-dir": "/ats/active/",
        "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds": "3600",
        "yarn.timeline-service.entity-group-fs-store.done-dir": "/ats/done/",
        "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes": "org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl,org.apache.spark.deploy.history.yarn.plugin.SparkATSPlugin",
        "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath": "/usr/hdp/${hdp.version}/spark/hdpLib/*",
        "yarn.timeline-service.entity-group-fs-store.retain-seconds": "604800",
        "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds": "60",
        "yarn.timeline-service.entity-group-fs-store.summary-store": "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
        "yarn.timeline-service.generic-application-history.store-class": "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
        "yarn.timeline-service.http-authentication.proxyuser.root.groups": "*",
        "yarn.timeline-service.http-authentication.proxyuser.root.hosts": "vgt-imaster-0.novalocal",
        "yarn.timeline-service.http-authentication.simple.anonymous.allowed": "true",
        "yarn.timeline-service.http-authentication.type": "simple",
        "yarn.timeline-service.leveldb-state-store.path": "/hadoop/yarn/timeline",
        "yarn.timeline-service.leveldb-timeline-store.path": "/hadoop/yarn/timeline",
        "yarn.timeline-service.leveldb-timeline-store.read-cache-size": "104857600",
        "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size": "10000",
        "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size": "10000",
        "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms": "300000",
        "yarn.timeline-service.recovery.enabled": "true",
        "yarn.timeline-service.state-store-class": "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
        "yarn.timeline-service.store-class": "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
        "yarn.timeline-service.ttl-enable": "true",
        "yarn.timeline-service.ttl-ms": "2678400000",
        "yarn.timeline-service.version": "1.5",
        "yarn.timeline-service.webapp.address": "%HOSTGROUP::host_group_1%:8188",
        "yarn.timeline-service.webapp.https.address": "%HOSTGROUP::host_group_1%:8190"
    },
    "zeppelin-config": {
        "zeppelin.anonymous.allowed": "true",
        "zeppelin.interpreter.connect.timeout": "30000",
        "zeppelin.interpreter.dir": "interpreter",
        "zeppelin.interpreters": "org.apache.zeppelin.spark.SparkInterpreter,org.apache.zeppelin.spark.PySparkInterpreter,org.apache.zeppelin.spark.SparkSqlInterpreter,org.apache.zeppelin.spark.DepInterpreter,org.apache.zeppelin.markdown.Markdown,org.apache.zeppelin.angular.AngularInterpreter,org.apache.zeppelin.shell.ShellInterpreter,org.apache.zeppelin.jdbc.JDBCInterpreter,org.apache.zeppelin.phoenix.PhoenixInterpreter,org.apache.zeppelin.livy.LivySparkInterpreter,org.apache.zeppelin.livy.LivyPySparkInterpreter,org.apache.zeppelin.livy.LivySparkRInterpreter,org.apache.zeppelin.livy.LivySparkSQLInterpreter",
        "zeppelin.notebook.dir": "notebook",
        "zeppelin.notebook.homescreen": "",
        "zeppelin.notebook.homescreen.hide": "false",
        "zeppelin.notebook.s3.bucket": "zeppelin",
        "zeppelin.notebook.s3.user": "user",
        "zeppelin.notebook.storage": "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
        "zeppelin.server.addr": "0.0.0.0",
        "zeppelin.server.allowed.origins": "*",
        "zeppelin.server.port": "9995",
        "zeppelin.ssl": "false",
        "zeppelin.ssl.client.auth": "false",
        "zeppelin.ssl.keystore.path": "conf/keystore",
        "zeppelin.ssl.keystore.type": "JKS",
        "zeppelin.ssl.truststore.path": "conf/truststore",
        "zeppelin.ssl.truststore.type": "JKS",
        "zeppelin.websocket.max.text.message.size": "1024000"
    },
    "zeppelin-env": {
        "log4j_properties_content": "log4j.rootLogger = INFO, dailyfile log4j.appender.stdout = org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout = org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=%5p [%d] ({%t} %F[%M]:%L) - %m%n log4j.appender.dailyfile.DatePattern=.yyyy-MM-dd log4j.appender.dailyfile.Threshold = INFO log4j.appender.dailyfile = org.apache.log4j.DailyRollingFileAppender log4j.appender.dailyfile.File = ${zeppelin.log.file} log4j.appender.dailyfile.layout = org.apache.log4j.PatternLayout log4j.appender.dailyfile.layout.ConversionPattern=%5p [%d] ({%t} %F[%M]:%L) - %m%n",
        "shiro_ini_content": "[users] # List of users with their password allowed to access Zeppelin. # To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuration-INISections #admin = password1 #user1 = password2, role1, role2 #user2 = password3, role3 #user3 = password4, role2 # Sample LDAP configuration, for user Authentication, currently tested for single Realm [main] #activeDirectoryRealm = org.apache.zeppelin.server.ActiveDirectoryGroupRealm #activeDirectoryRealm.systemUsername = CN=Administrator,CN=Users,DC=HW,DC=EXAMPLE,DC=COM #activeDirectoryRealm.systemPassword = Password1! #activeDirectoryRealm.hadoopSecurityCredentialPath = jceks://user/zeppelin/zeppelin.jceks #activeDirectoryRealm.searchBase = CN=Users,DC=HW,DC=TEST,DC=COM #activeDirectoryRealm.url = ldap://ad-nano.test.example.com:389 #activeDirectoryRealm.groupRolesMap = \"\" #activeDirectoryRealm.authorizationCachingEnabled = true #ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm #ldapRealm.userDnTemplate = uid={0},cn=users,cn=accounts,dc=example,dc=com #ldapRealm.contextFactory.url = ldap://ldaphost:389 #ldapRealm.contextFactory.authenticationMechanism = SIMPLE #sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager #securityManager.sessionManager = $sessionManager # 86,400,000 milliseconds = 24 hour #securityManager.sessionManager.globalSessionTimeout = 86400000 shiro.loginUrl = /api/login [urls] # anon means the access is anonymous. # authcBasic means Basic Auth Security # To enfore security, comment the line below and uncomment the next one /api/version = anon /** = anon #/** = authc",
        "zeppelin.executor.instances": "2",
        "zeppelin.executor.mem": "512m",
        "zeppelin.server.kerberos.keytab": "",
        "zeppelin.server.kerberos.principal": "",
        "zeppelin.spark.jar.dir": "/apps/zeppelin",
        "zeppelin_env_content": "# Spark master url. eg. spark://master_addr:7077. Leave empty if you want to use local mode export MASTER=yarn-client export SPARK_YARN_JAR={{spark_jar}} # Where log files are stored. PWD by default. export ZEPPELIN_LOG_DIR={{zeppelin_log_dir}} # The pid files are stored. /tmp by default. export ZEPPELIN_PID_DIR={{zeppelin_pid_dir}} export JAVA_HOME={{java64_home}} # Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\" export ZEPPELIN_JAVA_OPTS=\"-Dhdp.version={{full_stack_version}} -Dspark.executor.memory={{executor_mem}} -Dspark.executor.instances={{executor_instances}} -Dspark.yarn.queue={{spark_queue}}\" # Zeppelin jvm mem options Default -Xmx1024m -XX:MaxPermSize=512m # export ZEPPELIN_MEM # zeppelin interpreter process jvm mem options. Defualt = ZEPPELIN_MEM # export ZEPPELIN_INTP_MEM # zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTS # export ZEPPELIN_INTP_JAVA_OPTS # Where notebook saved # export ZEPPELIN_NOTEBOOK_DIR # Id of notebook to be displayed in homescreen. ex) 2A94M5J1Z # export ZEPPELIN_NOTEBOOK_HOMESCREEN # hide homescreen notebook from list when this value set to \"true\". default \"false\" # export ZEPPELIN_NOTEBOOK_HOMESCREEN_HIDE # Bucket where notebook saved # export ZEPPELIN_NOTEBOOK_S3_BUCKET # User in bucket where notebook saved. For example bucket/user/notebook/2A94M5J1Z/note.json # export ZEPPELIN_NOTEBOOK_S3_USER # A string representing this instance of zeppelin. $USER by default # export ZEPPELIN_IDENT_STRING # The scheduling priority for daemons. Defaults to 0. # export ZEPPELIN_NICENESS #### Spark interpreter configuration #### ## Use provided spark installation ## ## defining SPARK_HOME makes Zeppelin run spark interpreter process using spark-submit ## # (required) When it is defined, load it instead of Zeppelin embedded Spark libraries export SPARK_HOME={{spark_home}} # (optional) extra options to pass to spark submit. eg) \"--driver-memory 512M --executor-memory 1G\". # export SPARK_SUBMIT_OPTIONS ## Use embedded spark binaries ## ## without SPARK_HOME defined, Zeppelin still able to run spark interpreter process using embedded spark binaries. ## however, it is not encouraged when you can define SPARK_HOME ## # Options read in YARN client mode # yarn-site.xml is located in configuration directory in HADOOP_CONF_DIR. export HADOOP_CONF_DIR=/etc/hadoop/conf # Pyspark (supported with Spark 1.2.1 and above) # To configure pyspark, you need to set spark distribution's path to 'spark.home' property in Interpreter setting screen in Zeppelin GUI # path to the python command. must be the same path on the driver(Zeppelin) and all workers. # export PYSPARK_PYTHON export PYTHONPATH=\"${SPARK_HOME}/python:${SPARK_HOME}/python/lib/py4j-0.8.2.1-src.zip\" export SPARK_YARN_USER_ENV=\"PYTHONPATH=${PYTHONPATH}\" ## Spark interpreter options ## ## # Use HiveContext instead of SQLContext if set true. true by default. # export ZEPPELIN_SPARK_USEHIVECONTEXT # Execute multiple SQL concurrently if set true. false by default. # export ZEPPELIN_SPARK_CONCURRENTSQL # Max number of SparkSQL result to display. 1000 by default. # export ZEPPELIN_SPARK_MAXRESULT",
        "zeppelin_group": "zeppelin",
        "zeppelin_log_dir": "/var/log/zeppelin",
        "zeppelin_pid_dir": "/var/run/zeppelin",
        "zeppelin_user": "zeppelin"
    },
    "zoo.cfg": {
        "autopurge.purgeInterval": "24",
        "autopurge.snapRetainCount": "30",
        "clientPort": "2181",
        "dataDir": "/hadoop/zookeeper",
        "initLimit": "10",
        "syncLimit": "5",
        "tickTime": "2000"
    },
    "zookeeper-env": {
        "zk_log_dir": "/var/log/zookeeper",
        "zk_pid_dir": "/var/run/zookeeper",
        "zk_user": "zookeeper"
    }
}
